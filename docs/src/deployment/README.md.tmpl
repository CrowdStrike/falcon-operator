{{- $name := dict "azure" "Azure and AKS" "eks" "EKS and ECR" "eks-fargate" "EKS Fargate and ECR" "generic" "Kubernetes" "gke" "GKE and GCR" -}}
{{- $registry := dict "azure" "ACR (Azure Container Registry)" "eks" "ECR (Elastic Container Registry). A new AWS IAM Policy will be created to allow the operator to push to ECR registry" "eks-fargate" "ECR (Elastic Container Registry). A new AWS IAM Policy will be created to allow the operator to push to ECR registry" "gke" "GCR (Google Container Registry). A new GCP service account for pushing to GCR registry will be created" -}}

<!--- NOTE: DO NOT EDIT! This file is auto-generated. Please update the source *.tmpl file instead --->
# Deployment Guide for {{ get $name .Distro }}
This document will guide you through the installation of the Falcon Operator and deployment of the following custom resources provided by the Falcon Operator:
- [FalconAdmission](../../resources/admission/README.md) with the Falcon Admission Controller image being mirrored from CrowdStrike container registry to {{ get $registry .Distro }}.
- [FalconContainer](../../resources/container/README.md) with the Falcon Container image being mirrored from CrowdStrike container registry to {{ get $registry .Distro }}.
{{- if ne .Distro "eks-fargate" }}
- [FalconNodeSensor](../../resources/node/README.md) custom resource to the cluster.
{{- end }}

## Prerequisites

> [!IMPORTANT]
> - The correct CrowdStrike Cloud (not Endpoint) subscription
> - CrowdStrike API Key Pair (*if installing the CrowdStrike Sensor via the CrowdStrike API*)
>
>    > If you need help creating a new API key pair, review our docs: [CrowdStrike Falcon](https://falcon.crowdstrike.com/support/api-clients-and-keys).
>
>  Make sure to assign the following permissions to the key pair:
>  - Falcon Images Download: **Read**
>  - Sensor Download: **Read**

## Installing the Falcon Operator

<details>
  <summary>Click to expand</summary>

- Set up a new Kubernetes cluster or use an existing one.
{{- template "eks.tmpl" . }}

- Install the Falcon Operator by running the following command:
  ```sh
  {{ .KubeCmd }} apply -f https://github.com/crowdstrike/falcon-operator/releases/latest/download/falcon-operator.yaml
  ```

</details>

{{- if ne .Distro "eks-fargate" }}

### Deploying the Falcon Node Sensor

<details>
  <summary>Click to expand</summary>

After the Falcon Operator has deployed, you can now deploy the Falcon Node Sensor:

- Deploy FalconNodeSensor through the cli using the `{{ .KubeCmd }}` command:
  ```sh
  {{ .KubeCmd }} create -n falcon-operator -f https://raw.githubusercontent.com/crowdstrike/falcon-operator/main/config/samples/falcon_v1alpha1_falconnodesensor.yaml --edit=true
  ```
</details>

{{- end }}

### Deploying the Falcon Container Sidecar Sensor

<details>
  <summary>Click to expand</summary>

{{- template "presidecar.tmpl" . }}

#### Create the FalconContainer resource

{{- if eq .Distro "eks-fargate" }}

- Create an EKS Fargate profile for the FalconContainer resource deployment:
  ```sh
  eksctl create fargateprofile \
    --region "$AWS_REGION" \
    --cluster eks-fargate-cluster \
    --name fp-falcon-system \
    --namespace falcon-system
  ```
{{ end}}

- Create a new FalconContainer resource
  ```sh
  {{ .KubeCmd }} create -f https://raw.githubusercontent.com/crowdstrike/falcon-operator/main/docs/deployment/{{ .Distro }}/falconcontainer.yaml --edit=true
  ```

{{ template "cloudshell.tmpl" . }}

</details>

### Deploying the Falcon Admission Controller

<details>
  <summary>Click to expand</summary>

  {{- if eq .Distro "eks-fargate" }}

- Create an EKS Fargate profile for the FalconAdmission resource deployment:
  ```sh
  eksctl create fargateprofile \
    --region "$AWS_REGION" \
    --cluster eks-fargate-cluster \
    --name fp-falcon-kac \
    --namespace falcon-kac
  ```
{{ end}}

- Create a new FalconAdmission resource
  ```sh
  {{ .KubeCmd }} create -f https://raw.githubusercontent.com/crowdstrike/falcon-operator/main/docs/deployment/{{ .Distro }}/falconadmission.yaml --edit=true
  ```

</details>

## Uninstalling

> [!WARNING]
> It is essential to uninstall ALL of the deployed custom resources before uninstalling the Falcon Operator to ensure proper cleanup.

{{- if ne .Distro "eks-fargate" }}

### Uninstalling the Falcon Node Sensor

<details>
  <summary>Click to expand</summary>

Remove the FalconNodeSensor resource by running:

```sh
{{ .KubeCmd }} delete falconnodesensor -A --all
```
{{- end }}

</details>

### Uninstalling the Falcon Container Sidecar Sensor

<details>
  <summary>Click to expand</summary>

Remove the FalconContainer resource. The operator will then uninstall the Falcon Container Sidecar Sensor from the cluster:

```sh
{{ .KubeCmd }} delete falconcontainers --all
```

</details>

### Uninstalling the Falcon Admission Controller

<details>
  <summary>Click to expand</summary>

Remove the FalconAdmission resource. The operator will then uninstall the Falcon Admission Controller from the cluster:

```sh
{{ .KubeCmd }} delete falconadmission --all
```

</details>

### Uninstalling the Falcon Operator

<details>
  <summary>Click to expand</summary>

Delete the Falcon Operator deployment by running:

```sh
{{ .KubeCmd }} delete -f https://github.com/crowdstrike/falcon-operator/releases/latest/download/falcon-operator.yaml
```

</details>

{{- template "eksiam.tmpl" . }}
{{- template "gkeautopilot.tmpl" . }}
{{- template "gkenode.tmpl" . }}
