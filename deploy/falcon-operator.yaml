---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: falconcontainers.falcon.crowdstrike.com
spec:
  group: falcon.crowdstrike.com
  names:
    kind: FalconContainer
    listKind: FalconContainerList
    plural: falconcontainers
    singular: falconcontainer
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Phase of deployment
      jsonPath: .status.phase
      name: Status
      type: string
    - description: Version of Falcon Container
      jsonPath: .status.version
      name: Version
      type: string
    - description: Last error message
      jsonPath: .status.errormsg
      name: Error
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FalconContainer is the Schema for the falconcontainers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FalconContainerSpec defines the desired state of FalconContainer
            properties:
              falcon_api:
                description: FalconAPI configures connection from your local Falcon
                  operator to CrowdStrike Falcon platform.
                properties:
                  cid:
                    description: Falcon Customer ID (CID) Override (optional, default
                      is derived from the API Key pair)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                    type: string
                  client_id:
                    description: Falcon OAuth2 API Client ID
                    type: string
                  client_secret:
                    description: Falcon OAuth2 API Client Secret
                    type: string
                  cloud_region:
                    description: CloudRegion defines CrowdStrike Falcon Cloud Region
                      to which the operator will connect to
                    enum:
                    - autodiscover
                    - us-1
                    - us-2
                    - eu-1
                    - us-gov-1
                    type: string
                required:
                - client_id
                - client_secret
                - cloud_region
                type: object
              installer_args:
                description: InstallerArgs are passed directly down to the Falcon
                  Container Installer. Users are advised to consult Falcon Container
                  documentation to learn about available command line arguments at
                  https://falcon.crowdstrike.com/documentation/146/falcon-container-sensor-for-linux
                items:
                  type: string
                type: array
              registry:
                description: Registry configures container image registry to which
                  the Falcon Container image will be pushed
                properties:
                  acr_name:
                    description: Azure Container Registry Name represents the name
                      of the ACR for the Falcon Container push. Only applicable to
                      Azure cloud.
                    type: string
                  ecr_iam_role_arn:
                    description: EcrIamRoleArn allows injector to assume IAM role
                      to access registry. Please consult documentation to learn more
                      about this set-up.
                    type: string
                  tls:
                    description: TLS configures TLS connection for push of Falcon
                      Container image to the registry
                    properties:
                      insecure_skip_verify:
                        description: Allow pushing to docker registries over HTTPS
                          with failed TLS verification. Note that this does not affect
                          other TLS connections.
                        type: boolean
                    type: object
                  type:
                    description: Type of the registry to be used
                    enum:
                    - acr
                    - ecr
                    - gcr
                    - crowdstrike
                    - openshift
                    type: string
                required:
                - type
                type: object
              version:
                description: Falcon Container Version. The latest version will be
                  selected when version specifier is missing.
                type: string
            required:
            - falcon_api
            type: object
          status:
            description: FalconContainerStatus defines the observed state of FalconContainer
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              errormsg:
                description: ErrorMessage informs user of the last notable error.
                  Users are welcomed to see the operator logs to understand the full
                  context.
                type: string
              phase:
                description: Phase or the status of the deployment
                type: string
              retry_attempt:
                description: 'RetryAttempt is number of previous failed attempts.
                  Valid values: 0-5'
                type: integer
              version:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: falconnodesensors.falcon.crowdstrike.com
spec:
  group: falcon.crowdstrike.com
  names:
    kind: FalconNodeSensor
    listKind: FalconNodeSensorList
    plural: falconnodesensors
    singular: falconnodesensor
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FalconNodeSensor is the Schema for the falconnodesensors API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FalconNodeSensorSpec defines the desired state of FalconNodeSensor
            properties:
              falcon:
                description: CrowdStrike Falcon Sensor configuration settings.
                properties:
                  apd:
                    description: Enable the App Proxy Port (APP). Uncommon in container-based
                      deployments.
                    type: boolean
                  aph:
                    description: App Proxy Hostname (APH). Uncommon in container-based
                      deployments.
                    type: string
                  app:
                    description: App Proxy Port (APP). Uncommon in container-based
                      deployments.
                    type: string
                  billing:
                    description: Utilize default or metered billing.
                    enum:
                    - default
                    - metered
                    type: boolean
                  cid:
                    description: Falcon Customer ID (CID)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                    type: string
                  feature:
                    description: Options to pass to the "--feature" flag. Options
                      are [none,[enableLog[,disableLogBuffer[,disableOsfm[,emulateUpdate]]]]].
                    type: string
                  message_log:
                    description: Enable message log for logging to disk.
                    type: boolean
                  provisioning_token:
                    description: Provisioning token.
                    pattern: ^[0-9a-fA-F]{8}$
                    type: string
                  tags:
                    description: 'List of tags for sensor grouping. Allowed characters:
                      all alphanumerics, ''/'', ''-'', and ''_''.'
                    pattern: ^[a-zA-Z0-9\/\-_\,]+$
                    type: string
                  trace:
                    description: Set trace level. Options are [none|err|warn|info|debug].
                    enum:
                    - none
                    - err
                    - warn
                    - info
                    - debug
                    type: string
                required:
                - cid
                type: object
              node:
                description: FalconNodeSensorConfig defines aspects about how the
                  daemonset works.
                properties:
                  image:
                    default: falcon-node-sensor:latest
                    description: Name of the Falcon Sensor container to pull. Format
                      should be repository/namespace/name:tag
                    type: string
                  imagePullPolicy:
                    default: Always
                    description: PullPolicy describes a policy for if/when to pull
                      a container image
                    type: string
                  terminationGracePeriod:
                    default: 30
                    description: Kills pod after a specificed amount of time (in seconds).
                      Default is 30 seconds.
                    format: int64
                    type: integer
                  tolerations:
                    default:
                    - effect: NoSchedule
                      operator: Exists
                    - effect: NoExecute
                      operator: Exists
                    description: Specifies tolerations for custom taints. Defaults
                      to allowing scheduling on all nodes.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
            required:
            - falcon
            - node
            type: object
          status:
            description: FalconNodeSensorStatus defines the observed state of FalconNodeSensor
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: Namespace
metadata:
  name: falcon-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: falcon-operator
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - create
  - delete
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconcontainers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconcontainers/finalizers
  verbs:
  - update
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconcontainers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconnodesensors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconnodesensors/finalizers
  verbs:
  - update
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconnodesensors/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - image.openshift.io
  resources:
  - imagestreams
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - create
  - delete
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - create
  - delete
- apiGroups:
  - security.openshift.io
  resourceNames:
  - privileged
  resources:
  - securitycontextconstraints
  verbs:
  - use
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: falcon-operator
  namespace: falcon-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: falcon-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: falcon-operator
subjects:
- kind: ServiceAccount
  name: falcon-operator
  namespace: falcon-operator
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 70435a7a.crowdstrike.com
kind: ConfigMap
metadata:
  name: falcon-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: falcon-operator-controller-manager
  name: falcon-operator-controller-manager
  namespace: falcon-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: falcon-operator-controller-manager
  template:
    metadata:
      labels:
        control-plane: falcon-operator-controller-manager
    spec:
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
      containers:
      - args:
        - --leader-elect
        command:
        - /manager
        image: quay.io/crowdstrike/falcon-operator:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
      serviceAccountName: falcon-operator
      terminationGracePeriodSeconds: 10
