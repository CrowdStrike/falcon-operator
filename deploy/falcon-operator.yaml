apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    crowdstrike.com/component: manager
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: system
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: namespace
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
    sensor.falcon-system.crowdstrike.com/injection: disabled
  name: falcon-operator
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: falconadmissions.falcon.crowdstrike.com
spec:
  group: falcon.crowdstrike.com
  names:
    kind: FalconAdmission
    listKind: FalconAdmissionList
    plural: falconadmissions
    singular: falconadmission
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Version of the Operator
      jsonPath: .status.version
      name: Operator Version
      type: string
    - description: Version of the Falcon Admission Controller
      jsonPath: .status.sensor
      name: Falcon Sensor
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FalconAdmission is the Schema for the falconadmissions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FalconAdmissionSpec defines the desired state of FalconAdmission
            properties:
              admissionConfig:
                description: Additional configuration for Falcon Admission Controller
                  deployment.
                properties:
                  containerPort:
                    default: 4443
                    description: Port on which the Falcon Admission Controller container
                      will listen for requests.
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                    x-kubernetes-int-or-string: true
                  disabledNamespaces:
                    description: Ignore admission control for a specific set of namespaces.
                    properties:
                      ignoreOpenShiftNamespaces:
                        description: For OpenShift clusters, ignore openshift-specific
                          namespaces for admission control.
                        type: boolean
                      namespaces:
                        description: Configure a list of namespaces to ignore admission
                          control.
                        items:
                          type: string
                        type: array
                    type: object
                  failurePolicy:
                    default: Ignore
                    description: Configure the failure policy for the Falcon Admission
                      Controller.
                    enum:
                    - Ignore
                    - Fail
                    type: string
                  imagePullPolicy:
                    default: Always
                    description: PullPolicy describes a policy for if/when to pull
                      a container image
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                    type: string
                  imagePullSecrets:
                    description: ImagePullSecrets is an optional list of references
                      to secrets to use for pulling image from the image location.
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  replicas:
                    default: 2
                    description: Number of replicas for the Falcon Admission Controller
                      deployment.
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                    x-kubernetes-int-or-string: true
                  resources:
                    default:
                      limits:
                        cpu: 300m
                        memory: 512Mi
                      requests:
                        cpu: 300m
                        memory: 512Mi
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  resourcesClient:
                    default:
                      limits:
                        cpu: 750m
                        memory: 256Mi
                      requests:
                        cpu: 500m
                        memory: 256Mi
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  serviceAccount:
                    description: Define annotations that will be passed down to admision
                      controller service account. This is useful for passing along
                      AWS IAM Role or GCP Workload Identity.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Define annotations that will be passed down to
                          the Service Account. This is useful for passing along AWS
                          IAM Role or GCP Workload Identity.
                        type: object
                    type: object
                  servicePort:
                    default: 443
                    description: Port on which the Falcon Admission Controller service
                      will listen for requests from the cluster.
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                    x-kubernetes-int-or-string: true
                  tls:
                    description: Configure TLS setings for the Falcon Admission Controller
                    properties:
                      validity:
                        description: Validity of the TLS certificate in days. Default
                          is 3650 days.
                        pattern: ^[0-9]{1-4}$
                        type: integer
                        x-kubernetes-int-or-string: true
                    type: object
                  updateStrategy:
                    default:
                      rollingUpdate:
                        maxSurge: 1
                        maxUnavailable: 0
                    description: Type of Deployment update. Can be "RollingUpdate"
                      or "OnDelete". Default is RollingUpdate.
                    properties:
                      rollingUpdate:
                        description: RollingUpdate is used to specify the strategy
                          used to roll out a deployment
                        properties:
                          maxSurge:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of pods that can be scheduled
                              above the desired number of pods. Value can be an absolute
                              number (ex: 5) or a percentage of desired pods (ex:
                              10%). This can not be 0 if MaxUnavailable is 0. Absolute
                              number is calculated from percentage by rounding up.
                              Defaults to 25%. Example: when this is set to 30%, the
                              new ReplicaSet can be scaled up immediately when the
                              rolling update starts, such that the total number of
                              old and new pods do not exceed 130% of desired pods.
                              Once old pods have been killed, new ReplicaSet can be
                              scaled up further, ensuring that total number of pods
                              running at any time during the update is at most 130%
                              of desired pods.'
                            x-kubernetes-int-or-string: true
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of pods that can be unavailable
                              during the update. Value can be an absolute number (ex:
                              5) or a percentage of desired pods (ex: 10%). Absolute
                              number is calculated from percentage by rounding down.
                              This can not be 0 if MaxSurge is 0. Defaults to 25%.
                              Example: when this is set to 30%, the old ReplicaSet
                              can be scaled down to 70% of desired pods immediately
                              when the rolling update starts. Once new pods are ready,
                              old ReplicaSet can be scaled down further, followed
                              by scaling up the new ReplicaSet, ensuring that the
                              total number of pods available at all times during the
                              update is at least 70% of desired pods.'
                            x-kubernetes-int-or-string: true
                        type: object
                    type: object
                type: object
              falcon:
                description: CrowdStrike Falcon sensor configuration
                properties:
                  apd:
                    default: false
                    description: Disable the Falcon Sensor's use of a proxy.
                    type: boolean
                  aph:
                    description: The application proxy host to use for Falcon sensor
                      proxy configuration.
                    type: string
                  app:
                    description: The application proxy port to use for Falcon sensor
                      proxy configuration.
                    maximum: 65535
                    minimum: 0
                    type: integer
                  billing:
                    description: Utilize default or Pay-As-You-Go billing.
                    enum:
                    - default
                    - metered
                    type: string
                  cid:
                    description: Falcon Customer ID (CID)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                    type: string
                  provisioning_token:
                    description: Installation token that prevents unauthorized hosts
                      from being accidentally or maliciously added to your customer
                      ID (CID).
                    pattern: ^[0-9a-fA-F]{8}$
                    type: string
                  tags:
                    description: 'Sensor grouping tags are optional, user-defined
                      identifiers that can used to group and filter hosts. Allowed
                      characters: all alphanumerics, ''/'', ''-'', and ''_''.'
                    items:
                      type: string
                    type: array
                  trace:
                    default: none
                    description: Set sensor trace level.
                    enum:
                    - none
                    - err
                    - warn
                    - info
                    - debug
                    type: string
                type: object
              falcon_api:
                description: "FalconAPI configures connection from your local Falcon
                  operator to CrowdStrike Falcon platform. \n When configured, it
                  will pull the sensor from registry.crowdstrike.com and deploy the
                  appropriate sensor to the cluster. \n If using the API is not desired,
                  the sensor can be manually configured by setting the Image and Version
                  fields."
                properties:
                  cid:
                    description: Falcon Customer ID (CID) Override (optional, default
                      is derived from the API Key pair)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                    type: string
                  client_id:
                    description: Falcon OAuth2 API Client ID
                    type: string
                  client_secret:
                    description: Falcon OAuth2 API Client Secret
                    type: string
                  cloud_region:
                    description: Cloud Region defines CrowdStrike Falcon Cloud Region
                      to which the operator will connect and register.
                    enum:
                    - autodiscover
                    - us-1
                    - us-2
                    - eu-1
                    - us-gov-1
                    type: string
                required:
                - client_id
                - client_secret
                - cloud_region
                type: object
              image:
                description: Location of the Falcon Sensor image. Use only in cases
                  when you mirror the original image to your repository/name:tag,
                  and CrowdStrike OAuth2 API is not used.
                pattern: ^.*:.*$
                type: string
              installNamespace:
                default: falcon-kac
                description: Namespace where the Falcon Admission Controller should
                  be installed. For best security practices, this should be a dedicated
                  namespace that is not used for any other purpose. It also should
                  not be the same namespace where the Falcon Operator or the Falcon
                  Sensor is installed.
                type: string
              registry:
                description: Registry configures container image registry to which
                  the Admission Controller image will be pushed.
                properties:
                  acr_name:
                    description: Azure Container Registry Name represents the name
                      of the ACR for the Falcon Container push. Only applicable to
                      Azure cloud.
                    type: string
                  tls:
                    description: TLS configures TLS connection for push of Falcon
                      Container image to the registry
                    properties:
                      caCertificate:
                        description: Allow for users to provide a CA Cert Bundle,
                          as either a string or base64 encoded string
                        type: string
                      caCertificateConfigMap:
                        description: Allow for users to provide a ConfigMap containing
                          a CA Cert Bundle under a key ending in .crt
                        type: string
                      insecure_skip_verify:
                        description: Allow pushing to docker registries over HTTPS
                          with failed TLS verification. Note that this does not affect
                          other TLS connections.
                        type: boolean
                    type: object
                  type:
                    description: Type of container registry to be used
                    enum:
                    - acr
                    - ecr
                    - gcr
                    - crowdstrike
                    - openshift
                    type: string
                required:
                - type
                type: object
              resourcequota:
                description: ResourceQuota configures the ResourceQuota for the Falcon
                  Admission Controller. This is useful for limiting the number of
                  pods that can be created in the namespace.
                properties:
                  pods:
                    default: "2"
                    description: Limits the number of admission controller pods that
                      can be created in the namespace.
                    type: string
                type: object
              version:
                description: 'Falcon Admission Controller Version. The latest version
                  will be selected when version specifier is missing. Example: 6.31,
                  6.31.0, 6.31.0-1409, etc.'
                type: string
            type: object
          status:
            description: FalconAdmissionStatus defines the observed state of FalconAdmission
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              sensor:
                description: Version of the CrowdStrike Falcon Sensor
                type: string
              version:
                description: Version of the CrowdStrike Falcon Operator
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: falconcontainers.falcon.crowdstrike.com
spec:
  group: falcon.crowdstrike.com
  names:
    kind: FalconContainer
    listKind: FalconContainerList
    plural: falconcontainers
    singular: falconcontainer
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Version of the Operator
      jsonPath: .status.version
      name: Operator Version
      type: string
    - description: Version of the Falcon Container
      jsonPath: .status.sensor
      name: Falcon Sensor
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FalconContainer is the Schema for the falconcontainers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FalconContainerSpec defines the desired state of FalconContainer
            properties:
              falcon:
                description: CrowdStrike Falcon Sensor configuration settings.
                properties:
                  apd:
                    default: false
                    description: Disable the Falcon Sensor's use of a proxy.
                    type: boolean
                  aph:
                    description: The application proxy host to use for Falcon sensor
                      proxy configuration.
                    type: string
                  app:
                    description: The application proxy port to use for Falcon sensor
                      proxy configuration.
                    maximum: 65535
                    minimum: 0
                    type: integer
                  billing:
                    description: Utilize default or Pay-As-You-Go billing.
                    enum:
                    - default
                    - metered
                    type: string
                  cid:
                    description: Falcon Customer ID (CID)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                    type: string
                  provisioning_token:
                    description: Installation token that prevents unauthorized hosts
                      from being accidentally or maliciously added to your customer
                      ID (CID).
                    pattern: ^[0-9a-fA-F]{8}$
                    type: string
                  tags:
                    description: 'Sensor grouping tags are optional, user-defined
                      identifiers that can used to group and filter hosts. Allowed
                      characters: all alphanumerics, ''/'', ''-'', and ''_''.'
                    items:
                      type: string
                    type: array
                  trace:
                    default: none
                    description: Set sensor trace level.
                    enum:
                    - none
                    - err
                    - warn
                    - info
                    - debug
                    type: string
                type: object
              falcon_api:
                description: FalconAPI configures connection from your local Falcon
                  operator to CrowdStrike Falcon platform.
                properties:
                  cid:
                    description: Falcon Customer ID (CID) Override (optional, default
                      is derived from the API Key pair)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                    type: string
                  client_id:
                    description: Falcon OAuth2 API Client ID
                    type: string
                  client_secret:
                    description: Falcon OAuth2 API Client Secret
                    type: string
                  cloud_region:
                    description: Cloud Region defines CrowdStrike Falcon Cloud Region
                      to which the operator will connect and register.
                    enum:
                    - autodiscover
                    - us-1
                    - us-2
                    - eu-1
                    - us-gov-1
                    type: string
                required:
                - client_id
                - client_secret
                - cloud_region
                type: object
              image:
                pattern: ^.*:.*$
                type: string
              injector:
                default:
                  imagePullPolicy: Always
                description: Injector represents additional configuration for Falcon
                  Container Injector
                properties:
                  additionalEnvironmentVariables:
                    additionalProperties:
                      type: string
                    type: object
                  azureConfigPath:
                    type: string
                  disableDefaultNamespaceInjection:
                    default: false
                    type: boolean
                  disableDefaultPodInjection:
                    default: false
                    type: boolean
                  imagePullPolicy:
                    default: Always
                    description: PullPolicy describes a policy for if/when to pull
                      a container image
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                    type: string
                  imagePullSecret:
                    default: crowdstrike-falcon-pull-secret
                    type: string
                  listenPort:
                    default: 4433
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                    x-kubernetes-int-or-string: true
                  logVolume:
                    description: Volume represents a named volume in a pod that may
                      be accessed by any container in the pod.
                    properties:
                      awsElasticBlockStore:
                        description: 'awsElasticBlockStore represents an AWS Disk
                          resource that is attached to a kubelet''s host machine and
                          then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                        properties:
                          fsType:
                            description: 'fsType is the filesystem type of the volume
                              that you want to mount. Tip: Ensure that the filesystem
                              type is supported by the host operating system. Examples:
                              "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          partition:
                            description: 'partition is the partition in the volume
                              that you want to mount. If omitted, the default is to
                              mount by volume name. Examples: For volume /dev/sda1,
                              you specify the partition as "1". Similarly, the volume
                              partition for /dev/sda is "0" (or you can leave the
                              property empty).'
                            format: int32
                            type: integer
                          readOnly:
                            description: 'readOnly value true will force the readOnly
                              setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            type: boolean
                          volumeID:
                            description: 'volumeID is unique ID of the persistent
                              disk resource in AWS (Amazon EBS volume). More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            type: string
                        required:
                        - volumeID
                        type: object
                      azureDisk:
                        description: azureDisk represents an Azure Data Disk mount
                          on the host and bind mount to the pod.
                        properties:
                          cachingMode:
                            description: 'cachingMode is the Host Caching mode: None,
                              Read Only, Read Write.'
                            type: string
                          diskName:
                            description: diskName is the Name of the data disk in
                              the blob storage
                            type: string
                          diskURI:
                            description: diskURI is the URI of data disk in the blob
                              storage
                            type: string
                          fsType:
                            description: fsType is Filesystem type to mount. Must
                              be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                              to be "ext4" if unspecified.
                            type: string
                          kind:
                            description: 'kind expected values are Shared: multiple
                              blob disks per storage account  Dedicated: single blob
                              disk per storage account  Managed: azure managed data
                              disk (only in managed availability set). defaults to
                              shared'
                            type: string
                          readOnly:
                            description: readOnly Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                        required:
                        - diskName
                        - diskURI
                        type: object
                      azureFile:
                        description: azureFile represents an Azure File Service mount
                          on the host and bind mount to the pod.
                        properties:
                          readOnly:
                            description: readOnly defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretName:
                            description: secretName is the  name of secret that contains
                              Azure Storage Account Name and Key
                            type: string
                          shareName:
                            description: shareName is the azure share Name
                            type: string
                        required:
                        - secretName
                        - shareName
                        type: object
                      cephfs:
                        description: cephFS represents a Ceph FS mount on the host
                          that shares a pod's lifetime
                        properties:
                          monitors:
                            description: 'monitors is Required: Monitors is a collection
                              of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            items:
                              type: string
                            type: array
                          path:
                            description: 'path is Optional: Used as the mounted root,
                              rather than the full Ceph tree, default is /'
                            type: string
                          readOnly:
                            description: 'readOnly is Optional: Defaults to false
                              (read/write). ReadOnly here will force the ReadOnly
                              setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: boolean
                          secretFile:
                            description: 'secretFile is Optional: SecretFile is the
                              path to key ring for User, default is /etc/ceph/user.secret
                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: string
                          secretRef:
                            description: 'secretRef is Optional: SecretRef is reference
                              to the authentication secret for User, default is empty.
                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          user:
                            description: 'user is optional: User is the rados user
                              name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: string
                        required:
                        - monitors
                        type: object
                      cinder:
                        description: 'cinder represents a cinder volume attached and
                          mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                        properties:
                          fsType:
                            description: 'fsType is the filesystem type to mount.
                              Must be a filesystem type supported by the host operating
                              system. Examples: "ext4", "xfs", "ntfs". Implicitly
                              inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: string
                          readOnly:
                            description: 'readOnly defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: boolean
                          secretRef:
                            description: 'secretRef is optional: points to a secret
                              object containing parameters used to connect to OpenStack.'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          volumeID:
                            description: 'volumeID used to identify the volume in
                              cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: string
                        required:
                        - volumeID
                        type: object
                      configMap:
                        description: configMap represents a configMap that should
                          populate this volume
                        properties:
                          defaultMode:
                            description: 'defaultMode is optional: mode bits used
                              to set permissions on created files by default. Must
                              be an octal value between 0000 and 0777 or a decimal
                              value between 0 and 511. YAML accepts both octal and
                              decimal values, JSON requires decimal values for mode
                              bits. Defaults to 0644. Directories within the path
                              are not affected by this setting. This might be in conflict
                              with other options that affect the file mode, like fsGroup,
                              and the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: items if unspecified, each key-value pair
                              in the Data field of the referenced ConfigMap will be
                              projected into the volume as a file whose name is the
                              key and content is the value. If specified, the listed
                              keys will be projected into the specified paths, and
                              unlisted keys will not be present. If a key is specified
                              which is not present in the ConfigMap, the volume setup
                              will error unless it is marked optional. Paths must
                              be relative and may not contain the '..' path or start
                              with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: key is the key to project.
                                  type: string
                                mode:
                                  description: 'mode is Optional: mode bits used to
                                    set permissions on this file. Must be an octal
                                    value between 0000 and 0777 or a decimal value
                                    between 0 and 511. YAML accepts both octal and
                                    decimal values, JSON requires decimal values for
                                    mode bits. If not specified, the volume defaultMode
                                    will be used. This might be in conflict with other
                                    options that affect the file mode, like fsGroup,
                                    and the result can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: path is the relative path of the file
                                    to map the key to. May not be an absolute path.
                                    May not contain the path element '..'. May not
                                    start with the string '..'.
                                  type: string
                              required:
                              - key
                              - path
                              type: object
                            type: array
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: optional specify whether the ConfigMap or
                              its keys must be defined
                            type: boolean
                        type: object
                        x-kubernetes-map-type: atomic
                      csi:
                        description: csi (Container Storage Interface) represents
                          ephemeral storage that is handled by certain external CSI
                          drivers (Beta feature).
                        properties:
                          driver:
                            description: driver is the name of the CSI driver that
                              handles this volume. Consult with your admin for the
                              correct name as registered in the cluster.
                            type: string
                          fsType:
                            description: fsType to mount. Ex. "ext4", "xfs", "ntfs".
                              If not provided, the empty value is passed to the associated
                              CSI driver which will determine the default filesystem
                              to apply.
                            type: string
                          nodePublishSecretRef:
                            description: nodePublishSecretRef is a reference to the
                              secret object containing sensitive information to pass
                              to the CSI driver to complete the CSI NodePublishVolume
                              and NodeUnpublishVolume calls. This field is optional,
                              and  may be empty if no secret is required. If the secret
                              object contains more than one secret, all secret references
                              are passed.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          readOnly:
                            description: readOnly specifies a read-only configuration
                              for the volume. Defaults to false (read/write).
                            type: boolean
                          volumeAttributes:
                            additionalProperties:
                              type: string
                            description: volumeAttributes stores driver-specific properties
                              that are passed to the CSI driver. Consult your driver's
                              documentation for supported values.
                            type: object
                        required:
                        - driver
                        type: object
                      downwardAPI:
                        description: downwardAPI represents downward API about the
                          pod that should populate this volume
                        properties:
                          defaultMode:
                            description: 'Optional: mode bits to use on created files
                              by default. Must be a Optional: mode bits used to set
                              permissions on created files by default. Must be an
                              octal value between 0000 and 0777 or a decimal value
                              between 0 and 511. YAML accepts both octal and decimal
                              values, JSON requires decimal values for mode bits.
                              Defaults to 0644. Directories within the path are not
                              affected by this setting. This might be in conflict
                              with other options that affect the file mode, like fsGroup,
                              and the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: Items is a list of downward API volume file
                            items:
                              description: DownwardAPIVolumeFile represents information
                                to create the file containing the pod field
                              properties:
                                fieldRef:
                                  description: 'Required: Selects a field of the pod:
                                    only annotations, labels, name and namespace are
                                    supported.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                mode:
                                  description: 'Optional: mode bits used to set permissions
                                    on this file, must be an octal value between 0000
                                    and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON
                                    requires decimal values for mode bits. If not
                                    specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: 'Required: Path is  the relative path
                                    name of the file to be created. Must not be absolute
                                    or contain the ''..'' path. Must be utf-8 encoded.
                                    The first item of the relative path must not start
                                    with ''..'''
                                  type: string
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, requests.cpu and requests.memory)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - path
                              type: object
                            type: array
                        type: object
                      emptyDir:
                        description: 'emptyDir represents a temporary directory that
                          shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                        properties:
                          medium:
                            description: 'medium represents what type of storage medium
                              should back this directory. The default is "" which
                              means to use the node''s default medium. Must be an
                              empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            type: string
                          sizeLimit:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'sizeLimit is the total amount of local storage
                              required for this EmptyDir volume. The size limit is
                              also applicable for memory medium. The maximum usage
                              on memory medium EmptyDir would be the minimum value
                              between the SizeLimit specified here and the sum of
                              memory limits of all containers in a pod. The default
                              is nil which means that the limit is undefined. More
                              info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                      ephemeral:
                        description: "ephemeral represents a volume that is handled
                          by a cluster storage driver. The volume's lifecycle is tied
                          to the pod that defines it - it will be created before the
                          pod starts, and deleted when the pod is removed. \n Use
                          this if: a) the volume is only needed while the pod runs,
                          b) features of normal volumes like restoring from snapshot
                          or capacity tracking are needed, c) the storage driver is
                          specified through a storage class, and d) the storage driver
                          supports dynamic volume provisioning through a PersistentVolumeClaim
                          (see EphemeralVolumeSource for more information on the connection
                          between this volume type and PersistentVolumeClaim). \n
                          Use PersistentVolumeClaim or one of the vendor-specific
                          APIs for volumes that persist for longer than the lifecycle
                          of an individual pod. \n Use CSI for light-weight local
                          ephemeral volumes if the CSI driver is meant to be used
                          that way - see the documentation of the driver for more
                          information. \n A pod can use both types of ephemeral volumes
                          and persistent volumes at the same time."
                        properties:
                          volumeClaimTemplate:
                            description: "Will be used to create a stand-alone PVC
                              to provision the volume. The pod in which this EphemeralVolumeSource
                              is embedded will be the owner of the PVC, i.e. the PVC
                              will be deleted together with the pod.  The name of
                              the PVC will be `<pod name>-<volume name>` where `<volume
                              name>` is the name from the `PodSpec.Volumes` array
                              entry. Pod validation will reject the pod if the concatenated
                              name is not valid for a PVC (for example, too long).
                              \n An existing PVC with that name that is not owned
                              by the pod will *not* be used for the pod to avoid using
                              an unrelated volume by mistake. Starting the pod is
                              then blocked until the unrelated PVC is removed. If
                              such a pre-created PVC is meant to be used by the pod,
                              the PVC has to updated with an owner reference to the
                              pod once the pod exists. Normally this should not be
                              necessary, but it may be useful when manually reconstructing
                              a broken cluster. \n This field is read-only and no
                              changes will be made by Kubernetes to the PVC after
                              it has been created. \n Required, must not be nil."
                            properties:
                              metadata:
                                description: May contain labels and annotations that
                                  will be copied into the PVC when creating it. No
                                  other fields are allowed and will be rejected during
                                  validation.
                                type: object
                              spec:
                                description: The specification for the PersistentVolumeClaim.
                                  The entire content is copied unchanged into the
                                  PVC that gets created from this template. The same
                                  fields as in a PersistentVolumeClaim are also valid
                                  here.
                                properties:
                                  accessModes:
                                    description: 'accessModes contains the desired
                                      access modes the volume should have. More info:
                                      https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                    items:
                                      type: string
                                    type: array
                                  dataSource:
                                    description: 'dataSource field can be used to
                                      specify either: * An existing VolumeSnapshot
                                      object (snapshot.storage.k8s.io/VolumeSnapshot)
                                      * An existing PVC (PersistentVolumeClaim) If
                                      the provisioner or an external controller can
                                      support the specified data source, it will create
                                      a new volume based on the contents of the specified
                                      data source. When the AnyVolumeDataSource feature
                                      gate is enabled, dataSource contents will be
                                      copied to dataSourceRef, and dataSourceRef contents
                                      will be copied to dataSource when dataSourceRef.namespace
                                      is not specified. If the namespace is specified,
                                      then dataSourceRef will not be copied to dataSource.'
                                    properties:
                                      apiGroup:
                                        description: APIGroup is the group for the
                                          resource being referenced. If APIGroup is
                                          not specified, the specified Kind must be
                                          in the core API group. For any other third-party
                                          types, APIGroup is required.
                                        type: string
                                      kind:
                                        description: Kind is the type of resource
                                          being referenced
                                        type: string
                                      name:
                                        description: Name is the name of resource
                                          being referenced
                                        type: string
                                    required:
                                    - kind
                                    - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  dataSourceRef:
                                    description: 'dataSourceRef specifies the object
                                      from which to populate the volume with data,
                                      if a non-empty volume is desired. This may be
                                      any object from a non-empty API group (non core
                                      object) or a PersistentVolumeClaim object. When
                                      this field is specified, volume binding will
                                      only succeed if the type of the specified object
                                      matches some installed volume populator or dynamic
                                      provisioner. This field will replace the functionality
                                      of the dataSource field and as such if both
                                      fields are non-empty, they must have the same
                                      value. For backwards compatibility, when namespace
                                      isn''t specified in dataSourceRef, both fields
                                      (dataSource and dataSourceRef) will be set to
                                      the same value automatically if one of them
                                      is empty and the other is non-empty. When namespace
                                      is specified in dataSourceRef, dataSource isn''t
                                      set to the same value and must be empty. There
                                      are three important differences between dataSource
                                      and dataSourceRef: * While dataSource only allows
                                      two specific types of objects, dataSourceRef
                                      allows any non-core object, as well as PersistentVolumeClaim
                                      objects. * While dataSource ignores disallowed
                                      values (dropping them), dataSourceRef preserves
                                      all values, and generates an error if a disallowed
                                      value is specified. * While dataSource only
                                      allows local objects, dataSourceRef allows objects
                                      in any namespaces. (Beta) Using this field requires
                                      the AnyVolumeDataSource feature gate to be enabled.
                                      (Alpha) Using the namespace field of dataSourceRef
                                      requires the CrossNamespaceVolumeDataSource
                                      feature gate to be enabled.'
                                    properties:
                                      apiGroup:
                                        description: APIGroup is the group for the
                                          resource being referenced. If APIGroup is
                                          not specified, the specified Kind must be
                                          in the core API group. For any other third-party
                                          types, APIGroup is required.
                                        type: string
                                      kind:
                                        description: Kind is the type of resource
                                          being referenced
                                        type: string
                                      name:
                                        description: Name is the name of resource
                                          being referenced
                                        type: string
                                      namespace:
                                        description: Namespace is the namespace of
                                          resource being referenced Note that when
                                          a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                                          object is required in the referent namespace
                                          to allow that namespace's owner to accept
                                          the reference. See the ReferenceGrant documentation
                                          for details. (Alpha) This field requires
                                          the CrossNamespaceVolumeDataSource feature
                                          gate to be enabled.
                                        type: string
                                    required:
                                    - kind
                                    - name
                                    type: object
                                  resources:
                                    description: 'resources represents the minimum
                                      resources the volume should have. If RecoverVolumeExpansionFailure
                                      feature is enabled users are allowed to specify
                                      resource requirements that are lower than previous
                                      value but must still be higher than capacity
                                      recorded in the status field of the claim. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                    properties:
                                      claims:
                                        description: "Claims lists the names of resources,
                                          defined in spec.resourceClaims, that are
                                          used by this container. \n This is an alpha
                                          field and requires enabling the DynamicResourceAllocation
                                          feature gate. \n This field is immutable."
                                        items:
                                          description: ResourceClaim references one
                                            entry in PodSpec.ResourceClaims.
                                          properties:
                                            name:
                                              description: Name must match the name
                                                of one entry in pod.spec.resourceClaims
                                                of the Pod where this field is used.
                                                It makes that resource available inside
                                                a container.
                                              type: string
                                          required:
                                          - name
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                        - name
                                        x-kubernetes-list-type: map
                                      limits:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: 'Limits describes the maximum
                                          amount of compute resources allowed. More
                                          info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                        type: object
                                      requests:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: 'Requests describes the minimum
                                          amount of compute resources required. If
                                          Requests is omitted for a container, it
                                          defaults to Limits if that is explicitly
                                          specified, otherwise to an implementation-defined
                                          value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                        type: object
                                    type: object
                                  selector:
                                    description: selector is a label query over volumes
                                      to consider for binding.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  storageClassName:
                                    description: 'storageClassName is the name of
                                      the StorageClass required by the claim. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                    type: string
                                  volumeMode:
                                    description: volumeMode defines what type of volume
                                      is required by the claim. Value of Filesystem
                                      is implied when not included in claim spec.
                                    type: string
                                  volumeName:
                                    description: volumeName is the binding reference
                                      to the PersistentVolume backing this claim.
                                    type: string
                                type: object
                            required:
                            - spec
                            type: object
                        type: object
                      fc:
                        description: fc represents a Fibre Channel resource that is
                          attached to a kubelet's host machine and then exposed to
                          the pod.
                        properties:
                          fsType:
                            description: 'fsType is the filesystem type to mount.
                              Must be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                              to be "ext4" if unspecified. TODO: how do we prevent
                              errors in the filesystem from compromising the machine'
                            type: string
                          lun:
                            description: 'lun is Optional: FC target lun number'
                            format: int32
                            type: integer
                          readOnly:
                            description: 'readOnly is Optional: Defaults to false
                              (read/write). ReadOnly here will force the ReadOnly
                              setting in VolumeMounts.'
                            type: boolean
                          targetWWNs:
                            description: 'targetWWNs is Optional: FC target worldwide
                              names (WWNs)'
                            items:
                              type: string
                            type: array
                          wwids:
                            description: 'wwids Optional: FC volume world wide identifiers
                              (wwids) Either wwids or combination of targetWWNs and
                              lun must be set, but not both simultaneously.'
                            items:
                              type: string
                            type: array
                        type: object
                      flexVolume:
                        description: flexVolume represents a generic volume resource
                          that is provisioned/attached using an exec based plugin.
                        properties:
                          driver:
                            description: driver is the name of the driver to use for
                              this volume.
                            type: string
                          fsType:
                            description: fsType is the filesystem type to mount. Must
                              be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs", "ntfs". The default filesystem
                              depends on FlexVolume script.
                            type: string
                          options:
                            additionalProperties:
                              type: string
                            description: 'options is Optional: this field holds extra
                              command options if any.'
                            type: object
                          readOnly:
                            description: 'readOnly is Optional: defaults to false
                              (read/write). ReadOnly here will force the ReadOnly
                              setting in VolumeMounts.'
                            type: boolean
                          secretRef:
                            description: 'secretRef is Optional: secretRef is reference
                              to the secret object containing sensitive information
                              to pass to the plugin scripts. This may be empty if
                              no secret object is specified. If the secret object
                              contains more than one secret, all secrets are passed
                              to the plugin scripts.'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - driver
                        type: object
                      flocker:
                        description: flocker represents a Flocker volume attached
                          to a kubelet's host machine. This depends on the Flocker
                          control service being running
                        properties:
                          datasetName:
                            description: datasetName is Name of the dataset stored
                              as metadata -> name on the dataset for Flocker should
                              be considered as deprecated
                            type: string
                          datasetUUID:
                            description: datasetUUID is the UUID of the dataset. This
                              is unique identifier of a Flocker dataset
                            type: string
                        type: object
                      gcePersistentDisk:
                        description: 'gcePersistentDisk represents a GCE Disk resource
                          that is attached to a kubelet''s host machine and then exposed
                          to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                        properties:
                          fsType:
                            description: 'fsType is filesystem type of the volume
                              that you want to mount. Tip: Ensure that the filesystem
                              type is supported by the host operating system. Examples:
                              "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          partition:
                            description: 'partition is the partition in the volume
                              that you want to mount. If omitted, the default is to
                              mount by volume name. Examples: For volume /dev/sda1,
                              you specify the partition as "1". Similarly, the volume
                              partition for /dev/sda is "0" (or you can leave the
                              property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            format: int32
                            type: integer
                          pdName:
                            description: 'pdName is unique name of the PD resource
                              in GCE. Used to identify the disk in GCE. More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            type: string
                          readOnly:
                            description: 'readOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            type: boolean
                        required:
                        - pdName
                        type: object
                      gitRepo:
                        description: 'gitRepo represents a git repository at a particular
                          revision. DEPRECATED: GitRepo is deprecated. To provision
                          a container with a git repo, mount an EmptyDir into an InitContainer
                          that clones the repo using git, then mount the EmptyDir
                          into the Pod''s container.'
                        properties:
                          directory:
                            description: directory is the target directory name. Must
                              not contain or start with '..'.  If '.' is supplied,
                              the volume directory will be the git repository.  Otherwise,
                              if specified, the volume will contain the git repository
                              in the subdirectory with the given name.
                            type: string
                          repository:
                            description: repository is the URL
                            type: string
                          revision:
                            description: revision is the commit hash for the specified
                              revision.
                            type: string
                        required:
                        - repository
                        type: object
                      glusterfs:
                        description: 'glusterfs represents a Glusterfs mount on the
                          host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                        properties:
                          endpoints:
                            description: 'endpoints is the endpoint name that details
                              Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: string
                          path:
                            description: 'path is the Glusterfs volume path. More
                              info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: string
                          readOnly:
                            description: 'readOnly here will force the Glusterfs volume
                              to be mounted with read-only permissions. Defaults to
                              false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: boolean
                        required:
                        - endpoints
                        - path
                        type: object
                      hostPath:
                        description: 'hostPath represents a pre-existing file or directory
                          on the host machine that is directly exposed to the container.
                          This is generally used for system agents or other privileged
                          things that are allowed to see the host machine. Most containers
                          will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                          --- TODO(jonesdl) We need to restrict who can use host directory
                          mounts and who can/can not mount host directories as read/write.'
                        properties:
                          path:
                            description: 'path of the directory on the host. If the
                              path is a symlink, it will follow the link to the real
                              path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                          type:
                            description: 'type for HostPath Volume Defaults to ""
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                        required:
                        - path
                        type: object
                      iscsi:
                        description: 'iscsi represents an ISCSI Disk resource that
                          is attached to a kubelet''s host machine and then exposed
                          to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                        properties:
                          chapAuthDiscovery:
                            description: chapAuthDiscovery defines whether support
                              iSCSI Discovery CHAP authentication
                            type: boolean
                          chapAuthSession:
                            description: chapAuthSession defines whether support iSCSI
                              Session CHAP authentication
                            type: boolean
                          fsType:
                            description: 'fsType is the filesystem type of the volume
                              that you want to mount. Tip: Ensure that the filesystem
                              type is supported by the host operating system. Examples:
                              "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          initiatorName:
                            description: initiatorName is the custom iSCSI Initiator
                              Name. If initiatorName is specified with iscsiInterface
                              simultaneously, new iSCSI interface <target portal>:<volume
                              name> will be created for the connection.
                            type: string
                          iqn:
                            description: iqn is the target iSCSI Qualified Name.
                            type: string
                          iscsiInterface:
                            description: iscsiInterface is the interface Name that
                              uses an iSCSI transport. Defaults to 'default' (tcp).
                            type: string
                          lun:
                            description: lun represents iSCSI Target Lun number.
                            format: int32
                            type: integer
                          portals:
                            description: portals is the iSCSI Target Portal List.
                              The portal is either an IP or ip_addr:port if the port
                              is other than default (typically TCP ports 860 and 3260).
                            items:
                              type: string
                            type: array
                          readOnly:
                            description: readOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false.
                            type: boolean
                          secretRef:
                            description: secretRef is the CHAP Secret for iSCSI target
                              and initiator authentication
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          targetPortal:
                            description: targetPortal is iSCSI Target Portal. The
                              Portal is either an IP or ip_addr:port if the port is
                              other than default (typically TCP ports 860 and 3260).
                            type: string
                        required:
                        - iqn
                        - lun
                        - targetPortal
                        type: object
                      name:
                        description: 'name of the volume. Must be a DNS_LABEL and
                          unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      nfs:
                        description: 'nfs represents an NFS mount on the host that
                          shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                        properties:
                          path:
                            description: 'path that is exported by the NFS server.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: string
                          readOnly:
                            description: 'readOnly here will force the NFS export
                              to be mounted with read-only permissions. Defaults to
                              false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: boolean
                          server:
                            description: 'server is the hostname or IP address of
                              the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: string
                        required:
                        - path
                        - server
                        type: object
                      persistentVolumeClaim:
                        description: 'persistentVolumeClaimVolumeSource represents
                          a reference to a PersistentVolumeClaim in the same namespace.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                        properties:
                          claimName:
                            description: 'claimName is the name of a PersistentVolumeClaim
                              in the same namespace as the pod using this volume.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            type: string
                          readOnly:
                            description: readOnly Will force the ReadOnly setting
                              in VolumeMounts. Default false.
                            type: boolean
                        required:
                        - claimName
                        type: object
                      photonPersistentDisk:
                        description: photonPersistentDisk represents a PhotonController
                          persistent disk attached and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: fsType is the filesystem type to mount. Must
                              be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                              to be "ext4" if unspecified.
                            type: string
                          pdID:
                            description: pdID is the ID that identifies Photon Controller
                              persistent disk
                            type: string
                        required:
                        - pdID
                        type: object
                      portworxVolume:
                        description: portworxVolume represents a portworx volume attached
                          and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: fSType represents the filesystem type to
                              mount Must be a filesystem type supported by the host
                              operating system. Ex. "ext4", "xfs". Implicitly inferred
                              to be "ext4" if unspecified.
                            type: string
                          readOnly:
                            description: readOnly defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          volumeID:
                            description: volumeID uniquely identifies a Portworx volume
                            type: string
                        required:
                        - volumeID
                        type: object
                      projected:
                        description: projected items for all in one resources secrets,
                          configmaps, and downward API
                        properties:
                          defaultMode:
                            description: defaultMode are the mode bits used to set
                              permissions on created files by default. Must be an
                              octal value between 0000 and 0777 or a decimal value
                              between 0 and 511. YAML accepts both octal and decimal
                              values, JSON requires decimal values for mode bits.
                              Directories within the path are not affected by this
                              setting. This might be in conflict with other options
                              that affect the file mode, like fsGroup, and the result
                              can be other mode bits set.
                            format: int32
                            type: integer
                          sources:
                            description: sources is the list of volume projections
                            items:
                              description: Projection that may be projected along
                                with other supported volume types
                              properties:
                                configMap:
                                  description: configMap information about the configMap
                                    data to project
                                  properties:
                                    items:
                                      description: items if unspecified, each key-value
                                        pair in the Data field of the referenced ConfigMap
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the ConfigMap, the
                                        volume setup will error unless it is marked
                                        optional. Paths must be relative and may not
                                        contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: optional specify whether the ConfigMap
                                        or its keys must be defined
                                      type: boolean
                                  type: object
                                  x-kubernetes-map-type: atomic
                                downwardAPI:
                                  description: downwardAPI information about the downwardAPI
                                    data to project
                                  properties:
                                    items:
                                      description: Items is a list of DownwardAPIVolume
                                        file
                                      items:
                                        description: DownwardAPIVolumeFile represents
                                          information to create the file containing
                                          the pod field
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field
                                              of the pod: only annotations, labels,
                                              name and namespace are supported.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          mode:
                                            description: 'Optional: mode bits used
                                              to set permissions on this file, must
                                              be an octal value between 0000 and 0777
                                              or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal
                                              values, JSON requires decimal values
                                              for mode bits. If not specified, the
                                              volume defaultMode will be used. This
                                              might be in conflict with other options
                                              that affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: 'Required: Path is  the relative
                                              path name of the file to be created.
                                              Must not be absolute or contain the
                                              ''..'' path. Must be utf-8 encoded.
                                              The first item of the relative path
                                              must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              requests.cpu and requests.memory) are
                                              currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        required:
                                        - path
                                        type: object
                                      type: array
                                  type: object
                                secret:
                                  description: secret information about the secret
                                    data to project
                                  properties:
                                    items:
                                      description: items if unspecified, each key-value
                                        pair in the Data field of the referenced Secret
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the Secret, the volume
                                        setup will error unless it is marked optional.
                                        Paths must be relative and may not contain
                                        the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: optional field specify whether
                                        the Secret or its key must be defined
                                      type: boolean
                                  type: object
                                  x-kubernetes-map-type: atomic
                                serviceAccountToken:
                                  description: serviceAccountToken is information
                                    about the serviceAccountToken data to project
                                  properties:
                                    audience:
                                      description: audience is the intended audience
                                        of the token. A recipient of a token must
                                        identify itself with an identifier specified
                                        in the audience of the token, and otherwise
                                        should reject the token. The audience defaults
                                        to the identifier of the apiserver.
                                      type: string
                                    expirationSeconds:
                                      description: expirationSeconds is the requested
                                        duration of validity of the service account
                                        token. As the token approaches expiration,
                                        the kubelet volume plugin will proactively
                                        rotate the service account token. The kubelet
                                        will start trying to rotate the token if the
                                        token is older than 80 percent of its time
                                        to live or if the token is older than 24 hours.Defaults
                                        to 1 hour and must be at least 10 minutes.
                                      format: int64
                                      type: integer
                                    path:
                                      description: path is the path relative to the
                                        mount point of the file to project the token
                                        into.
                                      type: string
                                  required:
                                  - path
                                  type: object
                              type: object
                            type: array
                        type: object
                      quobyte:
                        description: quobyte represents a Quobyte mount on the host
                          that shares a pod's lifetime
                        properties:
                          group:
                            description: group to map volume access to Default is
                              no group
                            type: string
                          readOnly:
                            description: readOnly here will force the Quobyte volume
                              to be mounted with read-only permissions. Defaults to
                              false.
                            type: boolean
                          registry:
                            description: registry represents a single or multiple
                              Quobyte Registry services specified as a string as host:port
                              pair (multiple entries are separated with commas) which
                              acts as the central registry for volumes
                            type: string
                          tenant:
                            description: tenant owning the given Quobyte volume in
                              the Backend Used with dynamically provisioned Quobyte
                              volumes, value is set by the plugin
                            type: string
                          user:
                            description: user to map volume access to Defaults to
                              serivceaccount user
                            type: string
                          volume:
                            description: volume is a string that references an already
                              created Quobyte volume by name.
                            type: string
                        required:
                        - registry
                        - volume
                        type: object
                      rbd:
                        description: 'rbd represents a Rados Block Device mount on
                          the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
                        properties:
                          fsType:
                            description: 'fsType is the filesystem type of the volume
                              that you want to mount. Tip: Ensure that the filesystem
                              type is supported by the host operating system. Examples:
                              "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          image:
                            description: 'image is the rados image name. More info:
                              https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          keyring:
                            description: 'keyring is the path to key ring for RBDUser.
                              Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          monitors:
                            description: 'monitors is a collection of Ceph monitors.
                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            items:
                              type: string
                            type: array
                          pool:
                            description: 'pool is the rados pool name. Default is
                              rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          readOnly:
                            description: 'readOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: boolean
                          secretRef:
                            description: 'secretRef is name of the authentication
                              secret for RBDUser. If provided overrides keyring. Default
                              is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          user:
                            description: 'user is the rados user name. Default is
                              admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                        required:
                        - image
                        - monitors
                        type: object
                      scaleIO:
                        description: scaleIO represents a ScaleIO persistent volume
                          attached and mounted on Kubernetes nodes.
                        properties:
                          fsType:
                            description: fsType is the filesystem type to mount. Must
                              be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                            type: string
                          gateway:
                            description: gateway is the host address of the ScaleIO
                              API Gateway.
                            type: string
                          protectionDomain:
                            description: protectionDomain is the name of the ScaleIO
                              Protection Domain for the configured storage.
                            type: string
                          readOnly:
                            description: readOnly Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: secretRef references to the secret for ScaleIO
                              user and other sensitive information. If this is not
                              provided, Login operation will fail.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          sslEnabled:
                            description: sslEnabled Flag enable/disable SSL communication
                              with Gateway, default false
                            type: boolean
                          storageMode:
                            description: storageMode indicates whether the storage
                              for a volume should be ThickProvisioned or ThinProvisioned.
                              Default is ThinProvisioned.
                            type: string
                          storagePool:
                            description: storagePool is the ScaleIO Storage Pool associated
                              with the protection domain.
                            type: string
                          system:
                            description: system is the name of the storage system
                              as configured in ScaleIO.
                            type: string
                          volumeName:
                            description: volumeName is the name of a volume already
                              created in the ScaleIO system that is associated with
                              this volume source.
                            type: string
                        required:
                        - gateway
                        - secretRef
                        - system
                        type: object
                      secret:
                        description: 'secret represents a secret that should populate
                          this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                        properties:
                          defaultMode:
                            description: 'defaultMode is Optional: mode bits used
                              to set permissions on created files by default. Must
                              be an octal value between 0000 and 0777 or a decimal
                              value between 0 and 511. YAML accepts both octal and
                              decimal values, JSON requires decimal values for mode
                              bits. Defaults to 0644. Directories within the path
                              are not affected by this setting. This might be in conflict
                              with other options that affect the file mode, like fsGroup,
                              and the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: items If unspecified, each key-value pair
                              in the Data field of the referenced Secret will be projected
                              into the volume as a file whose name is the key and
                              content is the value. If specified, the listed keys
                              will be projected into the specified paths, and unlisted
                              keys will not be present. If a key is specified which
                              is not present in the Secret, the volume setup will
                              error unless it is marked optional. Paths must be relative
                              and may not contain the '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: key is the key to project.
                                  type: string
                                mode:
                                  description: 'mode is Optional: mode bits used to
                                    set permissions on this file. Must be an octal
                                    value between 0000 and 0777 or a decimal value
                                    between 0 and 511. YAML accepts both octal and
                                    decimal values, JSON requires decimal values for
                                    mode bits. If not specified, the volume defaultMode
                                    will be used. This might be in conflict with other
                                    options that affect the file mode, like fsGroup,
                                    and the result can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: path is the relative path of the file
                                    to map the key to. May not be an absolute path.
                                    May not contain the path element '..'. May not
                                    start with the string '..'.
                                  type: string
                              required:
                              - key
                              - path
                              type: object
                            type: array
                          optional:
                            description: optional field specify whether the Secret
                              or its keys must be defined
                            type: boolean
                          secretName:
                            description: 'secretName is the name of the secret in
                              the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                            type: string
                        type: object
                      storageos:
                        description: storageOS represents a StorageOS volume attached
                          and mounted on Kubernetes nodes.
                        properties:
                          fsType:
                            description: fsType is the filesystem type to mount. Must
                              be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                              to be "ext4" if unspecified.
                            type: string
                          readOnly:
                            description: readOnly defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: secretRef specifies the secret to use for
                              obtaining the StorageOS API credentials.  If not specified,
                              default values will be attempted.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          volumeName:
                            description: volumeName is the human-readable name of
                              the StorageOS volume.  Volume names are only unique
                              within a namespace.
                            type: string
                          volumeNamespace:
                            description: volumeNamespace specifies the scope of the
                              volume within StorageOS.  If no namespace is specified
                              then the Pod's namespace will be used.  This allows
                              the Kubernetes name scoping to be mirrored within StorageOS
                              for tighter integration. Set VolumeName to any name
                              to override the default behaviour. Set to "default"
                              if you are not using namespaces within StorageOS. Namespaces
                              that do not pre-exist within StorageOS will be created.
                            type: string
                        type: object
                      vsphereVolume:
                        description: vsphereVolume represents a vSphere volume attached
                          and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: fsType is filesystem type to mount. Must
                              be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                              to be "ext4" if unspecified.
                            type: string
                          storagePolicyID:
                            description: storagePolicyID is the storage Policy Based
                              Management (SPBM) profile ID associated with the StoragePolicyName.
                            type: string
                          storagePolicyName:
                            description: storagePolicyName is the storage Policy Based
                              Management (SPBM) profile name.
                            type: string
                          volumePath:
                            description: volumePath is the path that identifies vSphere
                              volume vmdk
                            type: string
                        required:
                        - volumePath
                        type: object
                    required:
                    - name
                    type: object
                  replicas:
                    default: 2
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                    x-kubernetes-int-or-string: true
                  resources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  sensorResources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  serviceAccount:
                    description: Define annotations that will be passed down to injector
                      service account. This is useful for passing along AWS IAM Role
                      or GCP Workload Identity.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Define annotations that will be passed down to
                          the Service Account. This is useful for passing along AWS
                          IAM Role or GCP Workload Identity.
                        type: object
                    type: object
                  tls:
                    properties:
                      validity:
                        pattern: ^[0-9]{1-4}$
                        type: integer
                        x-kubernetes-int-or-string: true
                    type: object
                type: object
              registry:
                description: Registry configures container image registry to which
                  the Falcon Container image will be pushed
                properties:
                  acr_name:
                    description: Azure Container Registry Name represents the name
                      of the ACR for the Falcon Container push. Only applicable to
                      Azure cloud.
                    type: string
                  tls:
                    description: TLS configures TLS connection for push of Falcon
                      Container image to the registry
                    properties:
                      caCertificate:
                        description: Allow for users to provide a CA Cert Bundle,
                          as either a string or base64 encoded string
                        type: string
                      caCertificateConfigMap:
                        description: Allow for users to provide a ConfigMap containing
                          a CA Cert Bundle under a key ending in .crt
                        type: string
                      insecure_skip_verify:
                        description: Allow pushing to docker registries over HTTPS
                          with failed TLS verification. Note that this does not affect
                          other TLS connections.
                        type: boolean
                    type: object
                  type:
                    description: Type of container registry to be used
                    enum:
                    - acr
                    - ecr
                    - gcr
                    - crowdstrike
                    - openshift
                    type: string
                required:
                - type
                type: object
              version:
                description: Falcon Container Version. The latest version will be
                  selected when version specifier is missing; ignored when Image is
                  set.
                type: string
            type: object
          status:
            description: FalconContainerStatus defines the observed state of FalconContainer
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              sensor:
                description: Version of the CrowdStrike Falcon Sensor
                type: string
              version:
                description: Version of the CrowdStrike Falcon Operator
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: falconnodesensors.falcon.crowdstrike.com
spec:
  group: falcon.crowdstrike.com
  names:
    kind: FalconNodeSensor
    listKind: FalconNodeSensorList
    plural: falconnodesensors
    singular: falconnodesensor
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Version of the Operator
      jsonPath: .status.version
      name: Operator Version
      type: string
    - description: Version of the Falcon Sensor
      jsonPath: .status.sensor
      name: Falcon Sensor
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FalconNodeSensor is the Schema for the falconnodesensors API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FalconNodeSensorSpec defines the desired state of FalconNodeSensor
            properties:
              falcon:
                description: CrowdStrike Falcon Sensor configuration settings.
                properties:
                  apd:
                    default: false
                    description: Disable the Falcon Sensor's use of a proxy.
                    type: boolean
                  aph:
                    description: The application proxy host to use for Falcon sensor
                      proxy configuration.
                    type: string
                  app:
                    description: The application proxy port to use for Falcon sensor
                      proxy configuration.
                    maximum: 65535
                    minimum: 0
                    type: integer
                  billing:
                    description: Utilize default or Pay-As-You-Go billing.
                    enum:
                    - default
                    - metered
                    type: string
                  cid:
                    description: Falcon Customer ID (CID)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                    type: string
                  provisioning_token:
                    description: Installation token that prevents unauthorized hosts
                      from being accidentally or maliciously added to your customer
                      ID (CID).
                    pattern: ^[0-9a-fA-F]{8}$
                    type: string
                  tags:
                    description: 'Sensor grouping tags are optional, user-defined
                      identifiers that can used to group and filter hosts. Allowed
                      characters: all alphanumerics, ''/'', ''-'', and ''_''.'
                    items:
                      type: string
                    type: array
                  trace:
                    default: none
                    description: Set sensor trace level.
                    enum:
                    - none
                    - err
                    - warn
                    - info
                    - debug
                    type: string
                type: object
              falcon_api:
                description: "FalconAPI configures connection from your local Falcon
                  operator to CrowdStrike Falcon platform. \n When configured, it
                  will pull the sensor from registry.crowdstrike.com and deploy the
                  appropriate sensor to the cluster. \n If using the API is not desired,
                  the sensor can be manually configured."
                properties:
                  cid:
                    description: Falcon Customer ID (CID) Override (optional, default
                      is derived from the API Key pair)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                    type: string
                  client_id:
                    description: Falcon OAuth2 API Client ID
                    type: string
                  client_secret:
                    description: Falcon OAuth2 API Client Secret
                    type: string
                  cloud_region:
                    description: Cloud Region defines CrowdStrike Falcon Cloud Region
                      to which the operator will connect and register.
                    enum:
                    - autodiscover
                    - us-1
                    - us-2
                    - eu-1
                    - us-gov-1
                    type: string
                required:
                - client_id
                - client_secret
                - cloud_region
                type: object
              node:
                description: Various configuration for DaemonSet Deployment
                properties:
                  backend:
                    default: kernel
                    description: Sets the backend to be used by the DaemonSet Sensor.
                    enum:
                    - kernel
                    - bpf
                    type: string
                  disableCleanup:
                    default: false
                    description: Disables the cleanup of the sensor through DaemonSet
                      on the nodes. Disabling might have unintended consequences for
                      certain operations such as sensor downgrading.
                    type: boolean
                  gke:
                    description: Enables the use of GKE Autopilot.
                    properties:
                      autopilot:
                        description: Enables the use of GKE Autopilot.
                        type: boolean
                    type: object
                  image:
                    description: Location of the Falcon Sensor image. Use only in
                      cases when you mirror the original image to your repository/name:tag
                    pattern: ^.*:.*$
                    type: string
                  imagePullPolicy:
                    default: Always
                    description: PullPolicy describes a policy for if/when to pull
                      a container image
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                    type: string
                  imagePullSecrets:
                    description: ImagePullSecrets is an optional list of references
                      to secrets in the falcon-system namespace to use for pulling
                      image from image_override location.
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  nodeAffinity:
                    description: Specifies node affinity for scheduling the DaemonSet.
                      Defaults to allowing scheduling on all nodes.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  priorityClass:
                    description: Enable priority class for the DaemonSet. This is
                      useful for GKE Autopilot clusters, but can be set for any cluster.
                    properties:
                      deploy:
                        description: Enables the operator to deploy a PriorityClass
                          instead of rolling your own. Default is false.
                        type: boolean
                      name:
                        description: Name of the priority class to use for the DaemonSet.
                        type: string
                      value:
                        description: Value of the priority class to use for the DaemonSet.
                          Requires the Deploy field to be set to true.
                        format: int32
                        type: integer
                    type: object
                  resources:
                    description: Configure resource requests and limits for the DaemonSet
                      Sensor. Only applies when using the eBPF backend.
                    properties:
                      limits:
                        description: Sets the resource limits for the DaemonSet Sensor.
                          Only applies when using the eBPF backend.
                        properties:
                          cpu:
                            description: Minimum allowed is 250m.
                            pattern: ^(([0-9]{4,}|[2-9][5-9][0-9])m$)|[0-9]+$
                            type: string
                          ephemeral-storage:
                            type: string
                          memory:
                            description: Minimum allowed is 500Mi.
                            pattern: ^(([5-9][0-9]{2}[Mi]+)|([0-9.]+[iEGTP]+))|(([5-9][0-9]{8})|([0-9]{10,}))$
                            type: string
                        type: object
                      requests:
                        description: Sets the resource requests for the DaemonSet
                          Sensor. Only applies when using the eBPF backend.
                        properties:
                          cpu:
                            description: Minimum allowed is 250m.
                            pattern: ^(([0-9]{4,}|[2-9][5-9][0-9])m$)|[0-9]+$
                            type: string
                          ephemeral-storage:
                            type: string
                          memory:
                            description: Minimum allowed is 500Mi.
                            pattern: ^(([5-9][0-9]{2}[Mi]+)|([0-9.]+[iEGTP]+))|(([5-9][0-9]{8})|([0-9]{10,}))$
                            type: string
                        type: object
                    type: object
                  serviceAccount:
                    description: Add metadata to the DaemonSet Service Account for
                      IAM roles.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Define annotations that will be passed down to
                          the Service Account. This is useful for passing along AWS
                          IAM Role or GCP Workload Identity.
                        type: object
                    type: object
                  terminationGracePeriod:
                    default: 30
                    description: Kills pod after a specificed amount of time (in seconds).
                      Default is 30 seconds.
                    format: int64
                    type: integer
                  tolerations:
                    default:
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/master
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/control-plane
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/infra
                      operator: Exists
                    description: Specifies tolerations for custom taints. Defaults
                      to allowing scheduling on all nodes.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  updateStrategy:
                    description: Type of DaemonSet update. Can be "RollingUpdate"
                      or "OnDelete". Default is RollingUpdate.
                    properties:
                      rollingUpdate:
                        description: Spec to control the desired behavior of daemon
                          set rolling update.
                        properties:
                          maxSurge:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of nodes with an existing
                              available DaemonSet pod that can have an updated DaemonSet
                              pod during during an update. Value can be an absolute
                              number (ex: 5) or a percentage of desired pods (ex:
                              10%). This can not be 0 if MaxUnavailable is 0. Absolute
                              number is calculated from percentage by rounding up
                              to a minimum of 1. Default value is 0. Example: when
                              this is set to 30%, at most 30% of the total number
                              of nodes that should be running the daemon pod (i.e.
                              status.desiredNumberScheduled) can have their a new
                              pod created before the old pod is marked as deleted.
                              The update starts by launching new pods on 30% of nodes.
                              Once an updated pod is available (Ready for at least
                              minReadySeconds) the old DaemonSet pod on that node
                              is marked deleted. If the old pod becomes unavailable
                              for any reason (Ready transitions to false, is evicted,
                              or is drained) an updated pod is immediatedly created
                              on that node without considering surge limits. Allowing
                              surge implies the possibility that the resources consumed
                              by the daemonset on any given node can double if the
                              readiness check fails, and so resource intensive daemonsets
                              should take into account that they may cause evictions
                              during disruption.'
                            x-kubernetes-int-or-string: true
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of DaemonSet pods that
                              can be unavailable during the update. Value can be an
                              absolute number (ex: 5) or a percentage of total number
                              of DaemonSet pods at the start of the update (ex: 10%).
                              Absolute number is calculated from percentage by rounding
                              up. This cannot be 0 if MaxSurge is 0 Default value
                              is 1. Example: when this is set to 30%, at most 30%
                              of the total number of nodes that should be running
                              the daemon pod (i.e. status.desiredNumberScheduled)
                              can have their pods stopped for an update at any given
                              time. The update starts by stopping at most 30% of those
                              DaemonSet pods and then brings up new DaemonSet pods
                              in their place. Once the new pods are available, it
                              then proceeds onto other DaemonSet pods, thus ensuring
                              that at least 70% of original number of DaemonSet pods
                              are available at all times during the update.'
                            x-kubernetes-int-or-string: true
                        type: object
                      type:
                        default: RollingUpdate
                        enum:
                        - RollingUpdate
                        - OnDelete
                        type: string
                    type: object
                  version:
                    description: Version of the sensor to be installed. The latest
                      version will be selected when this version specifier is missing.
                    type: string
                type: object
            type: object
          status:
            description: FalconNodeSensorStatus defines the observed state of FalconNodeSensor
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              sensor:
                description: Version of the CrowdStrike Falcon Sensor
                type: string
              version:
                description: Version of the CrowdStrike Falcon Operator
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    crowdstrike.com/component: rbac
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: controller-manager-sa
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: serviceaccount
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
  name: falcon-operator-controller-manager
  namespace: falcon-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    crowdstrike.com/component: rbac
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: leader-election-role
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: role
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
  name: falcon-operator-leader-election-role
  namespace: falcon-operator
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    crowdstrike.com/component: rbac
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: admission-controller-role
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: clusterrole
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
  name: falcon-operator-admission-controller-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    crowdstrike.com/component: rbac
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: sidecar-role
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: clusterrole
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
  name: falcon-operator-container-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: falcon-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - deletecollection
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - resourcequotas
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconadmissions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconadmissions/finalizers
  verbs:
  - update
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconadmissions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconcontainers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconcontainers/finalizers
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconcontainers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconnodesensors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconnodesensors/finalizers
  verbs:
  - update
- apiGroups:
  - falcon.crowdstrike.com
  resources:
  - falconnodesensors/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - image.openshift.io
  resources:
  - imagestreams
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - security.openshift.io
  resourceNames:
  - privileged
  resources:
  - securitycontextconstraints
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    crowdstrike.com/component: rbac
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: node-sensor-role
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: clusterrole
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
  name: falcon-operator-node-sensor-role
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    crowdstrike.com/component: rbac
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: leader-election-rolebinding
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: rolebinding
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
  name: falcon-operator-leader-election-rolebinding
  namespace: falcon-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: falcon-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: falcon-operator-controller-manager
  namespace: falcon-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    crowdstrike.com/component: rbac
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: manager-rolebinding
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: clusterrolebinding
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
  name: falcon-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: falcon-operator-manager-role
subjects:
- kind: ServiceAccount
  name: falcon-operator-controller-manager
  namespace: falcon-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    crowdstrike.com/component: manager
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: controller-manager
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: deployment
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
  name: falcon-operator-controller-manager
  namespace: falcon-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --leader-elect
        command:
        - /manager
        env:
        - name: WATCH_NAMESPACE
          value: null
        - name: OPERATOR_NAME
          value: falcon-operator
        image: quay.io/crowdstrike/falcon-operator:0.9.1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
      serviceAccountName: falcon-operator-controller-manager
      terminationGracePeriodSeconds: 10
