apiVersion: v1
kind: Namespace
metadata:
  name: falcon-operator
  labels:
    control-plane: controller-manager
    crowdstrike.com/component: manager
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: system
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: namespace
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
    sensor.falcon-system.crowdstrike.com/injection: disabled
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: falconcontainers.falcon.crowdstrike.com
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
spec:
  group: falcon.crowdstrike.com
  names:
    kind: FalconContainer
    listKind: FalconContainerList
    plural: falconcontainers
    singular: falconcontainer
  scope: Cluster
  versions:
  - name: v1alpha1
    additionalPrinterColumns:
    - name: Operator Version
      type: string
      description: Version of the Operator
      jsonPath: .status.version
    - name: Falcon Sensor
      type: string
      description: Version of the Falcon Container
      jsonPath: .status.sensor
    schema:
      openAPIV3Schema:
        type: object
        description: FalconContainer is the Schema for the falconcontainers API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: FalconContainerSpec defines the desired state of FalconContainer
            properties:
              image:
                type: string
                pattern: ^.*:.*$
              falcon:
                type: object
                description: CrowdStrike Falcon Sensor configuration settings.
                properties:
                  apd:
                    type: boolean
                    default: false
                    description: Disable the Falcon Sensor's use of a proxy.
                  aph:
                    type: string
                    description: The application proxy host to use for Falcon sensor
                      proxy configuration.
                  app:
                    type: integer
                    description: The application proxy port to use for Falcon sensor
                      proxy configuration.
                    maximum: 65535
                    minimum: 0
                  billing:
                    type: string
                    description: Utilize default or Pay-As-You-Go billing.
                    enum:
                    - default
                    - metered
                  cid:
                    type: string
                    description: Falcon Customer ID (CID)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                  provisioning_token:
                    type: string
                    description: Installation token that prevents unauthorized hosts
                      from being accidentally or maliciously added to your customer
                      ID (CID).
                    pattern: ^[0-9a-fA-F]{8}$
                  tags:
                    type: array
                    description: 'Sensor grouping tags are optional, user-defined
                      identifiers that can used to group and filter hosts. Allowed
                      characters: all alphanumerics, ''/'', ''-'', and ''_''.'
                    items:
                      type: string
                  trace:
                    type: string
                    default: none
                    description: Set sensor trace level.
                    enum:
                    - none
                    - err
                    - warn
                    - info
                    - debug
              falcon_api:
                type: object
                description: FalconAPI configures connection from your local Falcon
                  operator to CrowdStrike Falcon platform.
                properties:
                  cid:
                    type: string
                    description: Falcon Customer ID (CID) Override (optional, default
                      is derived from the API Key pair)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                  client_id:
                    type: string
                    description: Falcon OAuth2 API Client ID
                  client_secret:
                    type: string
                    description: Falcon OAuth2 API Client Secret
                  cloud_region:
                    type: string
                    description: Cloud Region defines CrowdStrike Falcon Cloud Region
                      to which the operator will connect and register.
                    enum:
                    - autodiscover
                    - us-1
                    - us-2
                    - eu-1
                    - us-gov-1
                required:
                - client_id
                - client_secret
                - cloud_region
              injector:
                type: object
                default:
                  imagePullPolicy: Always
                description: Injector represents additional configuration for Falcon
                  Container Injector
                properties:
                  replicas:
                    type: integer
                    default: 2
                    format: int32
                    maximum: 65535
                    minimum: 0
                    x-kubernetes-int-or-string: true
                  serviceAccount:
                    type: object
                    description: Define annotations that will be passed down to injector
                      service account. This is useful for passing along AWS IAM Role
                      or GCP Workload Identity.
                    properties:
                      annotations:
                        type: object
                        additionalProperties:
                          type: string
                        description: Define annotations that will be passed down to
                          the Service Account. This is useful for passing along AWS
                          IAM Role or GCP Workload Identity.
                  resources:
                    type: object
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      limits:
                        type: object
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                      requests:
                        type: object
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                  imagePullPolicy:
                    type: string
                    default: Always
                    description: PullPolicy describes a policy for if/when to pull
                      a container image
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                  additionalEnvironmentVariables:
                    type: object
                    additionalProperties:
                      type: string
                  azureConfigPath:
                    type: string
                  disableDefaultNamespaceInjection:
                    type: boolean
                    default: false
                  disableDefaultPodInjection:
                    type: boolean
                    default: false
                  imagePullSecret:
                    type: string
                    default: crowdstrike-falcon-pull-secret
                  listenPort:
                    type: integer
                    default: 4433
                    format: int32
                    maximum: 65535
                    minimum: 0
                    x-kubernetes-int-or-string: true
                  logVolume:
                    type: object
                    description: Volume represents a named volume in a pod that may
                      be accessed by any container in the pod.
                    properties:
                      name:
                        type: string
                        description: 'name of the volume. Must be a DNS_LABEL and
                          unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      awsElasticBlockStore:
                        type: object
                        description: 'awsElasticBlockStore represents an AWS Disk
                          resource that is attached to a kubelet''s host machine and
                          then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                        properties:
                          readOnly:
                            type: boolean
                            description: 'readOnly value true will force the readOnly
                              setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                          fsType:
                            type: string
                            description: 'fsType is the filesystem type of the volume
                              that you want to mount. Tip: Ensure that the filesystem
                              type is supported by the host operating system. Examples:
                              "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                          partition:
                            type: integer
                            description: 'partition is the partition in the volume
                              that you want to mount. If omitted, the default is to
                              mount by volume name. Examples: For volume /dev/sda1,
                              you specify the partition as "1". Similarly, the volume
                              partition for /dev/sda is "0" (or you can leave the
                              property empty).'
                            format: int32
                          volumeID:
                            type: string
                            description: 'volumeID is unique ID of the persistent
                              disk resource in AWS (Amazon EBS volume). More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                        required:
                        - volumeID
                      azureDisk:
                        type: object
                        description: azureDisk represents an Azure Data Disk mount
                          on the host and bind mount to the pod.
                        properties:
                          kind:
                            type: string
                            description: 'kind expected values are Shared: multiple
                              blob disks per storage account  Dedicated: single blob
                              disk per storage account  Managed: azure managed data
                              disk (only in managed availability set). defaults to
                              shared'
                          readOnly:
                            type: boolean
                            description: readOnly Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                          cachingMode:
                            type: string
                            description: 'cachingMode is the Host Caching mode: None,
                              Read Only, Read Write.'
                          diskName:
                            type: string
                            description: diskName is the Name of the data disk in
                              the blob storage
                          diskURI:
                            type: string
                            description: diskURI is the URI of data disk in the blob
                              storage
                          fsType:
                            type: string
                            description: fsType is Filesystem type to mount. Must
                              be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                              to be "ext4" if unspecified.
                        required:
                        - diskName
                        - diskURI
                      azureFile:
                        type: object
                        description: azureFile represents an Azure File Service mount
                          on the host and bind mount to the pod.
                        properties:
                          readOnly:
                            type: boolean
                            description: readOnly defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                          secretName:
                            type: string
                            description: secretName is the  name of secret that contains
                              Azure Storage Account Name and Key
                          shareName:
                            type: string
                            description: shareName is the azure share Name
                        required:
                        - secretName
                        - shareName
                      cephfs:
                        type: object
                        description: cephFS represents a Ceph FS mount on the host
                          that shares a pod's lifetime
                        properties:
                          readOnly:
                            type: boolean
                            description: 'readOnly is Optional: Defaults to false
                              (read/write). ReadOnly here will force the ReadOnly
                              setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                          secretRef:
                            type: object
                            description: 'secretRef is Optional: SecretRef is reference
                              to the authentication secret for User, default is empty.
                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            properties:
                              name:
                                type: string
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                          monitors:
                            type: array
                            description: 'monitors is Required: Monitors is a collection
                              of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            items:
                              type: string
                          path:
                            type: string
                            description: 'path is Optional: Used as the mounted root,
                              rather than the full Ceph tree, default is /'
                          secretFile:
                            type: string
                            description: 'secretFile is Optional: SecretFile is the
                              path to key ring for User, default is /etc/ceph/user.secret
                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                          user:
                            type: string
                            description: 'user is optional: User is the rados user
                              name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                        required:
                        - monitors
                      cinder:
                        type: object
                        description: 'cinder represents a cinder volume attached and
                          mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                        properties:
                          readOnly:
                            type: boolean
                            description: 'readOnly defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                          secretRef:
                            type: object
                            description: 'secretRef is optional: points to a secret
                              object containing parameters used to connect to OpenStack.'
                            properties:
                              name:
                                type: string
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                          fsType:
                            type: string
                            description: 'fsType is the filesystem type to mount.
                              Must be a filesystem type supported by the host operating
                              system. Examples: "ext4", "xfs", "ntfs". Implicitly
                              inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                          volumeID:
                            type: string
                            description: 'volumeID used to identify the volume in
                              cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                        required:
                        - volumeID
                      configMap:
                        type: object
                        description: configMap represents a configMap that should
                          populate this volume
                        properties:
                          name:
                            type: string
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                          defaultMode:
                            type: integer
                            description: 'defaultMode is optional: mode bits used
                              to set permissions on created files by default. Must
                              be an octal value between 0000 and 0777 or a decimal
                              value between 0 and 511. YAML accepts both octal and
                              decimal values, JSON requires decimal values for mode
                              bits. Defaults to 0644. Directories within the path
                              are not affected by this setting. This might be in conflict
                              with other options that affect the file mode, like fsGroup,
                              and the result can be other mode bits set.'
                            format: int32
                          items:
                            type: array
                            description: items if unspecified, each key-value pair
                              in the Data field of the referenced ConfigMap will be
                              projected into the volume as a file whose name is the
                              key and content is the value. If specified, the listed
                              keys will be projected into the specified paths, and
                              unlisted keys will not be present. If a key is specified
                              which is not present in the ConfigMap, the volume setup
                              will error unless it is marked optional. Paths must
                              be relative and may not contain the '..' path or start
                              with '..'.
                            items:
                              type: object
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  type: string
                                  description: key is the key to project.
                                mode:
                                  type: integer
                                  description: 'mode is Optional: mode bits used to
                                    set permissions on this file. Must be an octal
                                    value between 0000 and 0777 or a decimal value
                                    between 0 and 511. YAML accepts both octal and
                                    decimal values, JSON requires decimal values for
                                    mode bits. If not specified, the volume defaultMode
                                    will be used. This might be in conflict with other
                                    options that affect the file mode, like fsGroup,
                                    and the result can be other mode bits set.'
                                  format: int32
                                path:
                                  type: string
                                  description: path is the relative path of the file
                                    to map the key to. May not be an absolute path.
                                    May not contain the path element '..'. May not
                                    start with the string '..'.
                              required:
                              - key
                              - path
                          optional:
                            type: boolean
                            description: optional specify whether the ConfigMap or
                              its keys must be defined
                      csi:
                        type: object
                        description: csi (Container Storage Interface) represents
                          ephemeral storage that is handled by certain external CSI
                          drivers (Beta feature).
                        properties:
                          readOnly:
                            type: boolean
                            description: readOnly specifies a read-only configuration
                              for the volume. Defaults to false (read/write).
                          driver:
                            type: string
                            description: driver is the name of the CSI driver that
                              handles this volume. Consult with your admin for the
                              correct name as registered in the cluster.
                          fsType:
                            type: string
                            description: fsType to mount. Ex. "ext4", "xfs", "ntfs".
                              If not provided, the empty value is passed to the associated
                              CSI driver which will determine the default filesystem
                              to apply.
                          nodePublishSecretRef:
                            type: object
                            description: nodePublishSecretRef is a reference to the
                              secret object containing sensitive information to pass
                              to the CSI driver to complete the CSI NodePublishVolume
                              and NodeUnpublishVolume calls. This field is optional,
                              and  may be empty if no secret is required. If the secret
                              object contains more than one secret, all secret references
                              are passed.
                            properties:
                              name:
                                type: string
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                          volumeAttributes:
                            type: object
                            additionalProperties:
                              type: string
                            description: volumeAttributes stores driver-specific properties
                              that are passed to the CSI driver. Consult your driver's
                              documentation for supported values.
                        required:
                        - driver
                      downwardAPI:
                        type: object
                        description: downwardAPI represents downward API about the
                          pod that should populate this volume
                        properties:
                          defaultMode:
                            type: integer
                            description: 'Optional: mode bits to use on created files
                              by default. Must be a Optional: mode bits used to set
                              permissions on created files by default. Must be an
                              octal value between 0000 and 0777 or a decimal value
                              between 0 and 511. YAML accepts both octal and decimal
                              values, JSON requires decimal values for mode bits.
                              Defaults to 0644. Directories within the path are not
                              affected by this setting. This might be in conflict
                              with other options that affect the file mode, like fsGroup,
                              and the result can be other mode bits set.'
                            format: int32
                          items:
                            type: array
                            description: Items is a list of downward API volume file
                            items:
                              type: object
                              description: DownwardAPIVolumeFile represents information
                                to create the file containing the pod field
                              properties:
                                fieldRef:
                                  type: object
                                  description: 'Required: Selects a field of the pod:
                                    only annotations, labels, name and namespace are
                                    supported.'
                                  properties:
                                    apiVersion:
                                      type: string
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                    fieldPath:
                                      type: string
                                      description: Path of the field to select in
                                        the specified API version.
                                  required:
                                  - fieldPath
                                resourceFieldRef:
                                  type: object
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, requests.cpu and requests.memory)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      type: string
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      type: string
                                      description: 'Required: resource to select'
                                  required:
                                  - resource
                                mode:
                                  type: integer
                                  description: 'Optional: mode bits used to set permissions
                                    on this file, must be an octal value between 0000
                                    and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON
                                    requires decimal values for mode bits. If not
                                    specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                path:
                                  type: string
                                  description: 'Required: Path is  the relative path
                                    name of the file to be created. Must not be absolute
                                    or contain the ''..'' path. Must be utf-8 encoded.
                                    The first item of the relative path must not start
                                    with ''..'''
                              required:
                              - path
                      emptyDir:
                        type: object
                        description: 'emptyDir represents a temporary directory that
                          shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                        properties:
                          medium:
                            type: string
                            description: 'medium represents what type of storage medium
                              should back this directory. The default is "" which
                              means to use the node''s default medium. Must be an
                              empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          sizeLimit:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'sizeLimit is the total amount of local storage
                              required for this EmptyDir volume. The size limit is
                              also applicable for memory medium. The maximum usage
                              on memory medium EmptyDir would be the minimum value
                              between the SizeLimit specified here and the sum of
                              memory limits of all containers in a pod. The default
                              is nil which means that the limit is undefined. More
                              info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                      ephemeral:
                        type: object
                        description: "ephemeral represents a volume that is handled
                          by a cluster storage driver. The volume's lifecycle is tied
                          to the pod that defines it - it will be created before the
                          pod starts, and deleted when the pod is removed. \n Use
                          this if: a) the volume is only needed while the pod runs,
                          b) features of normal volumes like restoring from snapshot
                          or capacity tracking are needed, c) the storage driver is
                          specified through a storage class, and d) the storage driver
                          supports dynamic volume provisioning through a PersistentVolumeClaim
                          (see EphemeralVolumeSource for more information on the connection
                          between this volume type and PersistentVolumeClaim). \n
                          Use PersistentVolumeClaim or one of the vendor-specific
                          APIs for volumes that persist for longer than the lifecycle
                          of an individual pod. \n Use CSI for light-weight local
                          ephemeral volumes if the CSI driver is meant to be used
                          that way - see the documentation of the driver for more
                          information. \n A pod can use both types of ephemeral volumes
                          and persistent volumes at the same time."
                        properties:
                          volumeClaimTemplate:
                            type: object
                            description: "Will be used to create a stand-alone PVC
                              to provision the volume. The pod in which this EphemeralVolumeSource
                              is embedded will be the owner of the PVC, i.e. the PVC
                              will be deleted together with the pod.  The name of
                              the PVC will be `<pod name>-<volume name>` where `<volume
                              name>` is the name from the `PodSpec.Volumes` array
                              entry. Pod validation will reject the pod if the concatenated
                              name is not valid for a PVC (for example, too long).
                              \n An existing PVC with that name that is not owned
                              by the pod will *not* be used for the pod to avoid using
                              an unrelated volume by mistake. Starting the pod is
                              then blocked until the unrelated PVC is removed. If
                              such a pre-created PVC is meant to be used by the pod,
                              the PVC has to updated with an owner reference to the
                              pod once the pod exists. Normally this should not be
                              necessary, but it may be useful when manually reconstructing
                              a broken cluster. \n This field is read-only and no
                              changes will be made by Kubernetes to the PVC after
                              it has been created. \n Required, must not be nil."
                            properties:
                              metadata:
                                type: object
                                description: May contain labels and annotations that
                                  will be copied into the PVC when creating it. No
                                  other fields are allowed and will be rejected during
                                  validation.
                              spec:
                                type: object
                                description: The specification for the PersistentVolumeClaim.
                                  The entire content is copied unchanged into the
                                  PVC that gets created from this template. The same
                                  fields as in a PersistentVolumeClaim are also valid
                                  here.
                                properties:
                                  selector:
                                    type: object
                                    description: selector is a label query over volumes
                                      to consider for binding.
                                    properties:
                                      matchExpressions:
                                        type: array
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          type: object
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              type: string
                                              description: key is the label key that
                                                the selector applies to.
                                            operator:
                                              type: string
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                            values:
                                              type: array
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                          required:
                                          - key
                                          - operator
                                      matchLabels:
                                        type: object
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                  resources:
                                    type: object
                                    description: 'resources represents the minimum
                                      resources the volume should have. If RecoverVolumeExpansionFailure
                                      feature is enabled users are allowed to specify
                                      resource requirements that are lower than previous
                                      value but must still be higher than capacity
                                      recorded in the status field of the claim. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                    properties:
                                      limits:
                                        type: object
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: 'Limits describes the maximum
                                          amount of compute resources allowed. More
                                          info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      requests:
                                        type: object
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: 'Requests describes the minimum
                                          amount of compute resources required. If
                                          Requests is omitted for a container, it
                                          defaults to Limits if that is explicitly
                                          specified, otherwise to an implementation-defined
                                          value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  accessModes:
                                    type: array
                                    description: 'accessModes contains the desired
                                      access modes the volume should have. More info:
                                      https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                    items:
                                      type: string
                                  dataSource:
                                    type: object
                                    description: 'dataSource field can be used to
                                      specify either: * An existing VolumeSnapshot
                                      object (snapshot.storage.k8s.io/VolumeSnapshot)
                                      * An existing PVC (PersistentVolumeClaim) If
                                      the provisioner or an external controller can
                                      support the specified data source, it will create
                                      a new volume based on the contents of the specified
                                      data source. If the AnyVolumeDataSource feature
                                      gate is enabled, this field will always have
                                      the same contents as the DataSourceRef field.'
                                    properties:
                                      name:
                                        type: string
                                        description: Name is the name of resource
                                          being referenced
                                      kind:
                                        type: string
                                        description: Kind is the type of resource
                                          being referenced
                                      apiGroup:
                                        type: string
                                        description: APIGroup is the group for the
                                          resource being referenced. If APIGroup is
                                          not specified, the specified Kind must be
                                          in the core API group. For any other third-party
                                          types, APIGroup is required.
                                    required:
                                    - kind
                                    - name
                                  dataSourceRef:
                                    type: object
                                    description: 'dataSourceRef specifies the object
                                      from which to populate the volume with data,
                                      if a non-empty volume is desired. This may be
                                      any local object from a non-empty API group
                                      (non core object) or a PersistentVolumeClaim
                                      object. When this field is specified, volume
                                      binding will only succeed if the type of the
                                      specified object matches some installed volume
                                      populator or dynamic provisioner. This field
                                      will replace the functionality of the DataSource
                                      field and as such if both fields are non-empty,
                                      they must have the same value. For backwards
                                      compatibility, both fields (DataSource and DataSourceRef)
                                      will be set to the same value automatically
                                      if one of them is empty and the other is non-empty.
                                      There are two important differences between
                                      DataSource and DataSourceRef: * While DataSource
                                      only allows two specific types of objects, DataSourceRef
                                      allows any non-core object, as well as PersistentVolumeClaim
                                      objects. * While DataSource ignores disallowed
                                      values (dropping them), DataSourceRef preserves
                                      all values, and generates an error if a disallowed
                                      value is specified. (Beta) Using this field
                                      requires the AnyVolumeDataSource feature gate
                                      to be enabled.'
                                    properties:
                                      name:
                                        type: string
                                        description: Name is the name of resource
                                          being referenced
                                      kind:
                                        type: string
                                        description: Kind is the type of resource
                                          being referenced
                                      apiGroup:
                                        type: string
                                        description: APIGroup is the group for the
                                          resource being referenced. If APIGroup is
                                          not specified, the specified Kind must be
                                          in the core API group. For any other third-party
                                          types, APIGroup is required.
                                    required:
                                    - kind
                                    - name
                                  storageClassName:
                                    type: string
                                    description: 'storageClassName is the name of
                                      the StorageClass required by the claim. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                  volumeMode:
                                    type: string
                                    description: volumeMode defines what type of volume
                                      is required by the claim. Value of Filesystem
                                      is implied when not included in claim spec.
                                  volumeName:
                                    type: string
                                    description: volumeName is the binding reference
                                      to the PersistentVolume backing this claim.
                            required:
                            - spec
                      fc:
                        type: object
                        description: fc represents a Fibre Channel resource that is
                          attached to a kubelet's host machine and then exposed to
                          the pod.
                        properties:
                          readOnly:
                            type: boolean
                            description: 'readOnly is Optional: Defaults to false
                              (read/write). ReadOnly here will force the ReadOnly
                              setting in VolumeMounts.'
                          fsType:
                            type: string
                            description: 'fsType is the filesystem type to mount.
                              Must be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                              to be "ext4" if unspecified. TODO: how do we prevent
                              errors in the filesystem from compromising the machine'
                          lun:
                            type: integer
                            description: 'lun is Optional: FC target lun number'
                            format: int32
                          targetWWNs:
                            type: array
                            description: 'targetWWNs is Optional: FC target worldwide
                              names (WWNs)'
                            items:
                              type: string
                          wwids:
                            type: array
                            description: 'wwids Optional: FC volume world wide identifiers
                              (wwids) Either wwids or combination of targetWWNs and
                              lun must be set, but not both simultaneously.'
                            items:
                              type: string
                      flexVolume:
                        type: object
                        description: flexVolume represents a generic volume resource
                          that is provisioned/attached using an exec based plugin.
                        properties:
                          readOnly:
                            type: boolean
                            description: 'readOnly is Optional: defaults to false
                              (read/write). ReadOnly here will force the ReadOnly
                              setting in VolumeMounts.'
                          secretRef:
                            type: object
                            description: 'secretRef is Optional: secretRef is reference
                              to the secret object containing sensitive information
                              to pass to the plugin scripts. This may be empty if
                              no secret object is specified. If the secret object
                              contains more than one secret, all secrets are passed
                              to the plugin scripts.'
                            properties:
                              name:
                                type: string
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                          driver:
                            type: string
                            description: driver is the name of the driver to use for
                              this volume.
                          fsType:
                            type: string
                            description: fsType is the filesystem type to mount. Must
                              be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs", "ntfs". The default filesystem
                              depends on FlexVolume script.
                          options:
                            type: object
                            additionalProperties:
                              type: string
                            description: 'options is Optional: this field holds extra
                              command options if any.'
                        required:
                        - driver
                      flocker:
                        type: object
                        description: flocker represents a Flocker volume attached
                          to a kubelet's host machine. This depends on the Flocker
                          control service being running
                        properties:
                          datasetName:
                            type: string
                            description: datasetName is Name of the dataset stored
                              as metadata -> name on the dataset for Flocker should
                              be considered as deprecated
                          datasetUUID:
                            type: string
                            description: datasetUUID is the UUID of the dataset. This
                              is unique identifier of a Flocker dataset
                      gcePersistentDisk:
                        type: object
                        description: 'gcePersistentDisk represents a GCE Disk resource
                          that is attached to a kubelet''s host machine and then exposed
                          to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                        properties:
                          readOnly:
                            type: boolean
                            description: 'readOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                          fsType:
                            type: string
                            description: 'fsType is filesystem type of the volume
                              that you want to mount. Tip: Ensure that the filesystem
                              type is supported by the host operating system. Examples:
                              "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                          partition:
                            type: integer
                            description: 'partition is the partition in the volume
                              that you want to mount. If omitted, the default is to
                              mount by volume name. Examples: For volume /dev/sda1,
                              you specify the partition as "1". Similarly, the volume
                              partition for /dev/sda is "0" (or you can leave the
                              property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            format: int32
                          pdName:
                            type: string
                            description: 'pdName is unique name of the PD resource
                              in GCE. Used to identify the disk in GCE. More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                        required:
                        - pdName
                      gitRepo:
                        type: object
                        description: 'gitRepo represents a git repository at a particular
                          revision. DEPRECATED: GitRepo is deprecated. To provision
                          a container with a git repo, mount an EmptyDir into an InitContainer
                          that clones the repo using git, then mount the EmptyDir
                          into the Pod''s container.'
                        properties:
                          revision:
                            type: string
                            description: revision is the commit hash for the specified
                              revision.
                          directory:
                            type: string
                            description: directory is the target directory name. Must
                              not contain or start with '..'.  If '.' is supplied,
                              the volume directory will be the git repository.  Otherwise,
                              if specified, the volume will contain the git repository
                              in the subdirectory with the given name.
                          repository:
                            type: string
                            description: repository is the URL
                        required:
                        - repository
                      glusterfs:
                        type: object
                        description: 'glusterfs represents a Glusterfs mount on the
                          host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                        properties:
                          readOnly:
                            type: boolean
                            description: 'readOnly here will force the Glusterfs volume
                              to be mounted with read-only permissions. Defaults to
                              false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                          endpoints:
                            type: string
                            description: 'endpoints is the endpoint name that details
                              Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                          path:
                            type: string
                            description: 'path is the Glusterfs volume path. More
                              info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                        required:
                        - endpoints
                        - path
                      hostPath:
                        type: object
                        description: 'hostPath represents a pre-existing file or directory
                          on the host machine that is directly exposed to the container.
                          This is generally used for system agents or other privileged
                          things that are allowed to see the host machine. Most containers
                          will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                          --- TODO(jonesdl) We need to restrict who can use host directory
                          mounts and who can/can not mount host directories as read/write.'
                        properties:
                          type:
                            type: string
                            description: 'type for HostPath Volume Defaults to ""
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          path:
                            type: string
                            description: 'path of the directory on the host. If the
                              path is a symlink, it will follow the link to the real
                              path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                        required:
                        - path
                      iscsi:
                        type: object
                        description: 'iscsi represents an ISCSI Disk resource that
                          is attached to a kubelet''s host machine and then exposed
                          to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                        properties:
                          readOnly:
                            type: boolean
                            description: readOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false.
                          secretRef:
                            type: object
                            description: secretRef is the CHAP Secret for iSCSI target
                              and initiator authentication
                            properties:
                              name:
                                type: string
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                          chapAuthDiscovery:
                            type: boolean
                            description: chapAuthDiscovery defines whether support
                              iSCSI Discovery CHAP authentication
                          chapAuthSession:
                            type: boolean
                            description: chapAuthSession defines whether support iSCSI
                              Session CHAP authentication
                          fsType:
                            type: string
                            description: 'fsType is the filesystem type of the volume
                              that you want to mount. Tip: Ensure that the filesystem
                              type is supported by the host operating system. Examples:
                              "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                          initiatorName:
                            type: string
                            description: initiatorName is the custom iSCSI Initiator
                              Name. If initiatorName is specified with iscsiInterface
                              simultaneously, new iSCSI interface <target portal>:<volume
                              name> will be created for the connection.
                          iqn:
                            type: string
                            description: iqn is the target iSCSI Qualified Name.
                          iscsiInterface:
                            type: string
                            description: iscsiInterface is the interface Name that
                              uses an iSCSI transport. Defaults to 'default' (tcp).
                          lun:
                            type: integer
                            description: lun represents iSCSI Target Lun number.
                            format: int32
                          portals:
                            type: array
                            description: portals is the iSCSI Target Portal List.
                              The portal is either an IP or ip_addr:port if the port
                              is other than default (typically TCP ports 860 and 3260).
                            items:
                              type: string
                          targetPortal:
                            type: string
                            description: targetPortal is iSCSI Target Portal. The
                              Portal is either an IP or ip_addr:port if the port is
                              other than default (typically TCP ports 860 and 3260).
                        required:
                        - iqn
                        - lun
                        - targetPortal
                      nfs:
                        type: object
                        description: 'nfs represents an NFS mount on the host that
                          shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                        properties:
                          readOnly:
                            type: boolean
                            description: 'readOnly here will force the NFS export
                              to be mounted with read-only permissions. Defaults to
                              false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                          path:
                            type: string
                            description: 'path that is exported by the NFS server.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                          server:
                            type: string
                            description: 'server is the hostname or IP address of
                              the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                        required:
                        - path
                        - server
                      persistentVolumeClaim:
                        type: object
                        description: 'persistentVolumeClaimVolumeSource represents
                          a reference to a PersistentVolumeClaim in the same namespace.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                        properties:
                          readOnly:
                            type: boolean
                            description: readOnly Will force the ReadOnly setting
                              in VolumeMounts. Default false.
                          claimName:
                            type: string
                            description: 'claimName is the name of a PersistentVolumeClaim
                              in the same namespace as the pod using this volume.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                        required:
                        - claimName
                      photonPersistentDisk:
                        type: object
                        description: photonPersistentDisk represents a PhotonController
                          persistent disk attached and mounted on kubelets host machine
                        properties:
                          fsType:
                            type: string
                            description: fsType is the filesystem type to mount. Must
                              be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                              to be "ext4" if unspecified.
                          pdID:
                            type: string
                            description: pdID is the ID that identifies Photon Controller
                              persistent disk
                        required:
                        - pdID
                      portworxVolume:
                        type: object
                        description: portworxVolume represents a portworx volume attached
                          and mounted on kubelets host machine
                        properties:
                          readOnly:
                            type: boolean
                            description: readOnly defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                          fsType:
                            type: string
                            description: fSType represents the filesystem type to
                              mount Must be a filesystem type supported by the host
                              operating system. Ex. "ext4", "xfs". Implicitly inferred
                              to be "ext4" if unspecified.
                          volumeID:
                            type: string
                            description: volumeID uniquely identifies a Portworx volume
                        required:
                        - volumeID
                      projected:
                        type: object
                        description: projected items for all in one resources secrets,
                          configmaps, and downward API
                        properties:
                          defaultMode:
                            type: integer
                            description: defaultMode are the mode bits used to set
                              permissions on created files by default. Must be an
                              octal value between 0000 and 0777 or a decimal value
                              between 0 and 511. YAML accepts both octal and decimal
                              values, JSON requires decimal values for mode bits.
                              Directories within the path are not affected by this
                              setting. This might be in conflict with other options
                              that affect the file mode, like fsGroup, and the result
                              can be other mode bits set.
                            format: int32
                          sources:
                            type: array
                            description: sources is the list of volume projections
                            items:
                              type: object
                              description: Projection that may be projected along
                                with other supported volume types
                              properties:
                                configMap:
                                  type: object
                                  description: configMap information about the configMap
                                    data to project
                                  properties:
                                    name:
                                      type: string
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                    items:
                                      type: array
                                      description: items if unspecified, each key-value
                                        pair in the Data field of the referenced ConfigMap
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the ConfigMap, the
                                        volume setup will error unless it is marked
                                        optional. Paths must be relative and may not
                                        contain the '..' path or start with '..'.
                                      items:
                                        type: object
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            type: string
                                            description: key is the key to project.
                                          mode:
                                            type: integer
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                          path:
                                            type: string
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                        required:
                                        - key
                                        - path
                                    optional:
                                      type: boolean
                                      description: optional specify whether the ConfigMap
                                        or its keys must be defined
                                downwardAPI:
                                  type: object
                                  description: downwardAPI information about the downwardAPI
                                    data to project
                                  properties:
                                    items:
                                      type: array
                                      description: Items is a list of DownwardAPIVolume
                                        file
                                      items:
                                        type: object
                                        description: DownwardAPIVolumeFile represents
                                          information to create the file containing
                                          the pod field
                                        properties:
                                          fieldRef:
                                            type: object
                                            description: 'Required: Selects a field
                                              of the pod: only annotations, labels,
                                              name and namespace are supported.'
                                            properties:
                                              apiVersion:
                                                type: string
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                              fieldPath:
                                                type: string
                                                description: Path of the field to
                                                  select in the specified API version.
                                            required:
                                            - fieldPath
                                          resourceFieldRef:
                                            type: object
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              requests.cpu and requests.memory) are
                                              currently supported.'
                                            properties:
                                              containerName:
                                                type: string
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                type: string
                                                description: 'Required: resource to
                                                  select'
                                            required:
                                            - resource
                                          mode:
                                            type: integer
                                            description: 'Optional: mode bits used
                                              to set permissions on this file, must
                                              be an octal value between 0000 and 0777
                                              or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal
                                              values, JSON requires decimal values
                                              for mode bits. If not specified, the
                                              volume defaultMode will be used. This
                                              might be in conflict with other options
                                              that affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                          path:
                                            type: string
                                            description: 'Required: Path is  the relative
                                              path name of the file to be created.
                                              Must not be absolute or contain the
                                              ''..'' path. Must be utf-8 encoded.
                                              The first item of the relative path
                                              must not start with ''..'''
                                        required:
                                        - path
                                secret:
                                  type: object
                                  description: secret information about the secret
                                    data to project
                                  properties:
                                    name:
                                      type: string
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                    items:
                                      type: array
                                      description: items if unspecified, each key-value
                                        pair in the Data field of the referenced Secret
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the Secret, the volume
                                        setup will error unless it is marked optional.
                                        Paths must be relative and may not contain
                                        the '..' path or start with '..'.
                                      items:
                                        type: object
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            type: string
                                            description: key is the key to project.
                                          mode:
                                            type: integer
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                          path:
                                            type: string
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                        required:
                                        - key
                                        - path
                                    optional:
                                      type: boolean
                                      description: optional field specify whether
                                        the Secret or its key must be defined
                                serviceAccountToken:
                                  type: object
                                  description: serviceAccountToken is information
                                    about the serviceAccountToken data to project
                                  properties:
                                    audience:
                                      type: string
                                      description: audience is the intended audience
                                        of the token. A recipient of a token must
                                        identify itself with an identifier specified
                                        in the audience of the token, and otherwise
                                        should reject the token. The audience defaults
                                        to the identifier of the apiserver.
                                    expirationSeconds:
                                      type: integer
                                      description: expirationSeconds is the requested
                                        duration of validity of the service account
                                        token. As the token approaches expiration,
                                        the kubelet volume plugin will proactively
                                        rotate the service account token. The kubelet
                                        will start trying to rotate the token if the
                                        token is older than 80 percent of its time
                                        to live or if the token is older than 24 hours.Defaults
                                        to 1 hour and must be at least 10 minutes.
                                      format: int64
                                    path:
                                      type: string
                                      description: path is the path relative to the
                                        mount point of the file to project the token
                                        into.
                                  required:
                                  - path
                      quobyte:
                        type: object
                        description: quobyte represents a Quobyte mount on the host
                          that shares a pod's lifetime
                        properties:
                          readOnly:
                            type: boolean
                            description: readOnly here will force the Quobyte volume
                              to be mounted with read-only permissions. Defaults to
                              false.
                          group:
                            type: string
                            description: group to map volume access to Default is
                              no group
                          registry:
                            type: string
                            description: registry represents a single or multiple
                              Quobyte Registry services specified as a string as host:port
                              pair (multiple entries are separated with commas) which
                              acts as the central registry for volumes
                          tenant:
                            type: string
                            description: tenant owning the given Quobyte volume in
                              the Backend Used with dynamically provisioned Quobyte
                              volumes, value is set by the plugin
                          user:
                            type: string
                            description: user to map volume access to Defaults to
                              serivceaccount user
                          volume:
                            type: string
                            description: volume is a string that references an already
                              created Quobyte volume by name.
                        required:
                        - registry
                        - volume
                      rbd:
                        type: object
                        description: 'rbd represents a Rados Block Device mount on
                          the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
                        properties:
                          image:
                            type: string
                            description: 'image is the rados image name. More info:
                              https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                          readOnly:
                            type: boolean
                            description: 'readOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                          secretRef:
                            type: object
                            description: 'secretRef is name of the authentication
                              secret for RBDUser. If provided overrides keyring. Default
                              is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            properties:
                              name:
                                type: string
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                          fsType:
                            type: string
                            description: 'fsType is the filesystem type of the volume
                              that you want to mount. Tip: Ensure that the filesystem
                              type is supported by the host operating system. Examples:
                              "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                          keyring:
                            type: string
                            description: 'keyring is the path to key ring for RBDUser.
                              Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                          monitors:
                            type: array
                            description: 'monitors is a collection of Ceph monitors.
                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            items:
                              type: string
                          pool:
                            type: string
                            description: 'pool is the rados pool name. Default is
                              rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                          user:
                            type: string
                            description: 'user is the rados user name. Default is
                              admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        required:
                        - image
                        - monitors
                      scaleIO:
                        type: object
                        description: scaleIO represents a ScaleIO persistent volume
                          attached and mounted on Kubernetes nodes.
                        properties:
                          readOnly:
                            type: boolean
                            description: readOnly Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                          secretRef:
                            type: object
                            description: secretRef references to the secret for ScaleIO
                              user and other sensitive information. If this is not
                              provided, Login operation will fail.
                            properties:
                              name:
                                type: string
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                          fsType:
                            type: string
                            description: fsType is the filesystem type to mount. Must
                              be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                          gateway:
                            type: string
                            description: gateway is the host address of the ScaleIO
                              API Gateway.
                          protectionDomain:
                            type: string
                            description: protectionDomain is the name of the ScaleIO
                              Protection Domain for the configured storage.
                          sslEnabled:
                            type: boolean
                            description: sslEnabled Flag enable/disable SSL communication
                              with Gateway, default false
                          storageMode:
                            type: string
                            description: storageMode indicates whether the storage
                              for a volume should be ThickProvisioned or ThinProvisioned.
                              Default is ThinProvisioned.
                          storagePool:
                            type: string
                            description: storagePool is the ScaleIO Storage Pool associated
                              with the protection domain.
                          system:
                            type: string
                            description: system is the name of the storage system
                              as configured in ScaleIO.
                          volumeName:
                            type: string
                            description: volumeName is the name of a volume already
                              created in the ScaleIO system that is associated with
                              this volume source.
                        required:
                        - gateway
                        - secretRef
                        - system
                      secret:
                        type: object
                        description: 'secret represents a secret that should populate
                          this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                        properties:
                          defaultMode:
                            type: integer
                            description: 'defaultMode is Optional: mode bits used
                              to set permissions on created files by default. Must
                              be an octal value between 0000 and 0777 or a decimal
                              value between 0 and 511. YAML accepts both octal and
                              decimal values, JSON requires decimal values for mode
                              bits. Defaults to 0644. Directories within the path
                              are not affected by this setting. This might be in conflict
                              with other options that affect the file mode, like fsGroup,
                              and the result can be other mode bits set.'
                            format: int32
                          items:
                            type: array
                            description: items If unspecified, each key-value pair
                              in the Data field of the referenced Secret will be projected
                              into the volume as a file whose name is the key and
                              content is the value. If specified, the listed keys
                              will be projected into the specified paths, and unlisted
                              keys will not be present. If a key is specified which
                              is not present in the Secret, the volume setup will
                              error unless it is marked optional. Paths must be relative
                              and may not contain the '..' path or start with '..'.
                            items:
                              type: object
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  type: string
                                  description: key is the key to project.
                                mode:
                                  type: integer
                                  description: 'mode is Optional: mode bits used to
                                    set permissions on this file. Must be an octal
                                    value between 0000 and 0777 or a decimal value
                                    between 0 and 511. YAML accepts both octal and
                                    decimal values, JSON requires decimal values for
                                    mode bits. If not specified, the volume defaultMode
                                    will be used. This might be in conflict with other
                                    options that affect the file mode, like fsGroup,
                                    and the result can be other mode bits set.'
                                  format: int32
                                path:
                                  type: string
                                  description: path is the relative path of the file
                                    to map the key to. May not be an absolute path.
                                    May not contain the path element '..'. May not
                                    start with the string '..'.
                              required:
                              - key
                              - path
                          optional:
                            type: boolean
                            description: optional field specify whether the Secret
                              or its keys must be defined
                          secretName:
                            type: string
                            description: 'secretName is the name of the secret in
                              the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                      storageos:
                        type: object
                        description: storageOS represents a StorageOS volume attached
                          and mounted on Kubernetes nodes.
                        properties:
                          readOnly:
                            type: boolean
                            description: readOnly defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                          secretRef:
                            type: object
                            description: secretRef specifies the secret to use for
                              obtaining the StorageOS API credentials.  If not specified,
                              default values will be attempted.
                            properties:
                              name:
                                type: string
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                          fsType:
                            type: string
                            description: fsType is the filesystem type to mount. Must
                              be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                              to be "ext4" if unspecified.
                          volumeName:
                            type: string
                            description: volumeName is the human-readable name of
                              the StorageOS volume.  Volume names are only unique
                              within a namespace.
                          volumeNamespace:
                            type: string
                            description: volumeNamespace specifies the scope of the
                              volume within StorageOS.  If no namespace is specified
                              then the Pod's namespace will be used.  This allows
                              the Kubernetes name scoping to be mirrored within StorageOS
                              for tighter integration. Set VolumeName to any name
                              to override the default behaviour. Set to "default"
                              if you are not using namespaces within StorageOS. Namespaces
                              that do not pre-exist within StorageOS will be created.
                      vsphereVolume:
                        type: object
                        description: vsphereVolume represents a vSphere volume attached
                          and mounted on kubelets host machine
                        properties:
                          fsType:
                            type: string
                            description: fsType is filesystem type to mount. Must
                              be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                              to be "ext4" if unspecified.
                          storagePolicyID:
                            type: string
                            description: storagePolicyID is the storage Policy Based
                              Management (SPBM) profile ID associated with the StoragePolicyName.
                          storagePolicyName:
                            type: string
                            description: storagePolicyName is the storage Policy Based
                              Management (SPBM) profile name.
                          volumePath:
                            type: string
                            description: volumePath is the path that identifies vSphere
                              volume vmdk
                        required:
                        - volumePath
                    required:
                    - name
                  sensorResources:
                    type: object
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      limits:
                        type: object
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                      requests:
                        type: object
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                  tls:
                    type: object
                    properties:
                      validity:
                        type: integer
                        pattern: ^[0-9]{1-4}$
                        x-kubernetes-int-or-string: true
              registry:
                type: object
                description: Registry configures container image registry to which
                  the Falcon Container image will be pushed
                properties:
                  type:
                    type: string
                    description: Type of the registry to be used
                    enum:
                    - acr
                    - ecr
                    - gcr
                    - crowdstrike
                    - openshift
                  acr_name:
                    type: string
                    description: Azure Container Registry Name represents the name
                      of the ACR for the Falcon Container push. Only applicable to
                      Azure cloud.
                  tls:
                    type: object
                    description: TLS configures TLS connection for push of Falcon
                      Container image to the registry
                    properties:
                      caCertificate:
                        type: string
                        description: Allow for users to provide a CA Cert Bundle,
                          as either a string or base64 encoded string
                      caCertificateConfigMap:
                        type: string
                        description: Allow for users to provide a ConfigMap containing
                          a CA Cert Bundle under a key ending in .crt
                      insecure_skip_verify:
                        type: boolean
                        description: Allow pushing to docker registries over HTTPS
                          with failed TLS verification. Note that this does not affect
                          other TLS connections.
                required:
                - type
              version:
                type: string
                description: Falcon Container Version. The latest version will be
                  selected when version specifier is missing; ignored when Image is
                  set.
          status:
            type: object
            description: FalconContainerStatus defines the observed state of FalconContainer
            properties:
              conditions:
                type: array
                items:
                  type: object
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    type:
                      type: string
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                    status:
                      type: string
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                    lastTransitionTime:
                      type: string
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                    message:
                      type: string
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                    observedGeneration:
                      type: integer
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                    reason:
                      type: string
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
              sensor:
                type: string
                description: Version of the CrowdStrike Falcon Sensor
              version:
                type: string
                description: Version of the CrowdStrike Falcon Operator
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: falconnodesensors.falcon.crowdstrike.com
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
spec:
  group: falcon.crowdstrike.com
  names:
    kind: FalconNodeSensor
    listKind: FalconNodeSensorList
    plural: falconnodesensors
    singular: falconnodesensor
  scope: Cluster
  versions:
  - name: v1alpha1
    additionalPrinterColumns:
    - name: Operator Version
      type: string
      description: Version of the Operator
      jsonPath: .status.version
    - name: Falcon Sensor
      type: string
      description: Version of the Falcon Sensor
      jsonPath: .status.sensor
    schema:
      openAPIV3Schema:
        type: object
        description: FalconNodeSensor is the Schema for the falconnodesensors API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: FalconNodeSensorSpec defines the desired state of FalconNodeSensor
            properties:
              falcon:
                type: object
                description: CrowdStrike Falcon Sensor configuration settings.
                properties:
                  apd:
                    type: boolean
                    default: false
                    description: Disable the Falcon Sensor's use of a proxy.
                  aph:
                    type: string
                    description: The application proxy host to use for Falcon sensor
                      proxy configuration.
                  app:
                    type: integer
                    description: The application proxy port to use for Falcon sensor
                      proxy configuration.
                    maximum: 65535
                    minimum: 0
                  billing:
                    type: string
                    description: Utilize default or Pay-As-You-Go billing.
                    enum:
                    - default
                    - metered
                  cid:
                    type: string
                    description: Falcon Customer ID (CID)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                  provisioning_token:
                    type: string
                    description: Installation token that prevents unauthorized hosts
                      from being accidentally or maliciously added to your customer
                      ID (CID).
                    pattern: ^[0-9a-fA-F]{8}$
                  tags:
                    type: array
                    description: 'Sensor grouping tags are optional, user-defined
                      identifiers that can used to group and filter hosts. Allowed
                      characters: all alphanumerics, ''/'', ''-'', and ''_''.'
                    items:
                      type: string
                  trace:
                    type: string
                    default: none
                    description: Set sensor trace level.
                    enum:
                    - none
                    - err
                    - warn
                    - info
                    - debug
              falcon_api:
                type: object
                description: "FalconAPI configures connection from your local Falcon
                  operator to CrowdStrike Falcon platform. \n When configured, it
                  will pull the sensor from registry.crowdstrike.com and deploy the
                  appropriate sensor to the cluster. \n If using the API is not desired,
                  the sensor can be manually configured."
                properties:
                  cid:
                    type: string
                    description: Falcon Customer ID (CID) Override (optional, default
                      is derived from the API Key pair)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                  client_id:
                    type: string
                    description: Falcon OAuth2 API Client ID
                  client_secret:
                    type: string
                    description: Falcon OAuth2 API Client Secret
                  cloud_region:
                    type: string
                    description: Cloud Region defines CrowdStrike Falcon Cloud Region
                      to which the operator will connect and register.
                    enum:
                    - autodiscover
                    - us-1
                    - us-2
                    - eu-1
                    - us-gov-1
                required:
                - client_id
                - client_secret
                - cloud_region
              node:
                type: object
                description: Various configuration for DaemonSet Deployment
                properties:
                  updateStrategy:
                    type: object
                    description: Type of DaemonSet update. Can be "RollingUpdate"
                      or "OnDelete". Default is RollingUpdate.
                    properties:
                      type:
                        type: string
                        default: RollingUpdate
                        enum:
                        - RollingUpdate
                        - OnDelete
                      rollingUpdate:
                        type: object
                        description: Spec to control the desired behavior of daemon
                          set rolling update.
                        properties:
                          maxSurge:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of nodes with an existing
                              available DaemonSet pod that can have an updated DaemonSet
                              pod during during an update. Value can be an absolute
                              number (ex: 5) or a percentage of desired pods (ex:
                              10%). This can not be 0 if MaxUnavailable is 0. Absolute
                              number is calculated from percentage by rounding up
                              to a minimum of 1. Default value is 0. Example: when
                              this is set to 30%, at most 30% of the total number
                              of nodes that should be running the daemon pod (i.e.
                              status.desiredNumberScheduled) can have their a new
                              pod created before the old pod is marked as deleted.
                              The update starts by launching new pods on 30% of nodes.
                              Once an updated pod is available (Ready for at least
                              minReadySeconds) the old DaemonSet pod on that node
                              is marked deleted. If the old pod becomes unavailable
                              for any reason (Ready transitions to false, is evicted,
                              or is drained) an updated pod is immediatedly created
                              on that node without considering surge limits. Allowing
                              surge implies the possibility that the resources consumed
                              by the daemonset on any given node can double if the
                              readiness check fails, and so resource intensive daemonsets
                              should take into account that they may cause evictions
                              during disruption.'
                            x-kubernetes-int-or-string: true
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of DaemonSet pods that
                              can be unavailable during the update. Value can be an
                              absolute number (ex: 5) or a percentage of total number
                              of DaemonSet pods at the start of the update (ex: 10%).
                              Absolute number is calculated from percentage by rounding
                              up. This cannot be 0 if MaxSurge is 0 Default value
                              is 1. Example: when this is set to 30%, at most 30%
                              of the total number of nodes that should be running
                              the daemon pod (i.e. status.desiredNumberScheduled)
                              can have their pods stopped for an update at any given
                              time. The update starts by stopping at most 30% of those
                              DaemonSet pods and then brings up new DaemonSet pods
                              in their place. Once the new pods are available, it
                              then proceeds onto other DaemonSet pods, thus ensuring
                              that at least 70% of original number of DaemonSet pods
                              are available at all times during the update.'
                            x-kubernetes-int-or-string: true
                  serviceAccount:
                    type: object
                    description: Add metadata to the DaemonSet Service Account for
                      IAM roles.
                    properties:
                      annotations:
                        type: object
                        additionalProperties:
                          type: string
                        description: Define annotations that will be passed down to
                          the Service Account. This is useful for passing along AWS
                          IAM Role or GCP Workload Identity.
                  imagePullSecrets:
                    type: array
                    description: ImagePullSecrets is an optional list of references
                      to secrets in the falcon-system namespace to use for pulling
                      image from image_override location.
                    items:
                      type: object
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          type: string
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                  tolerations:
                    type: array
                    default:
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/master
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/control-plane
                      operator: Exists
                    description: Specifies tolerations for custom taints. Defaults
                      to allowing scheduling on all nodes.
                    items:
                      type: object
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        value:
                          type: string
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                        effect:
                          type: string
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                        key:
                          type: string
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                        operator:
                          type: string
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                        tolerationSeconds:
                          type: integer
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                  image:
                    type: string
                    description: Location of the Falcon Sensor image. Use only in
                      cases when you mirror the original image to your repository/name:tag
                    pattern: ^.*:.*$
                  imagePullPolicy:
                    type: string
                    default: Always
                    description: PullPolicy describes a policy for if/when to pull
                      a container image
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                  backend:
                    type: string
                    default: kernel
                    description: Sets the backend to be used by the DaemonSet Sensor.
                    enum:
                    - kernel
                    - bpf
                  disableCleanup:
                    type: boolean
                    default: false
                    description: Disables the cleanup of the sensor through DaemonSet
                      on the nodes. Disabling might have unintended consequences for
                      certain operations such as sensor downgrading.
                  nodeAffinity:
                    type: object
                    description: Specifies node affinity for scheduling the DaemonSet.
                      Defaults to allowing scheduling on all nodes.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        type: array
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          type: object
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              type: object
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  type: array
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    type: object
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        type: string
                                        description: The label key that the selector
                                          applies to.
                                      operator:
                                        type: string
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                      values:
                                        type: array
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                    required:
                                    - key
                                    - operator
                                matchFields:
                                  type: array
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    type: object
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        type: string
                                        description: The label key that the selector
                                          applies to.
                                      operator:
                                        type: string
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                      values:
                                        type: array
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                    required:
                                    - key
                                    - operator
                            weight:
                              type: integer
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                          required:
                          - preference
                          - weight
                      requiredDuringSchedulingIgnoredDuringExecution:
                        type: object
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            type: array
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              type: object
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  type: array
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    type: object
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        type: string
                                        description: The label key that the selector
                                          applies to.
                                      operator:
                                        type: string
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                      values:
                                        type: array
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                    required:
                                    - key
                                    - operator
                                matchFields:
                                  type: array
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    type: object
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        type: string
                                        description: The label key that the selector
                                          applies to.
                                      operator:
                                        type: string
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                      values:
                                        type: array
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                    required:
                                    - key
                                    - operator
                        required:
                        - nodeSelectorTerms
                  terminationGracePeriod:
                    type: integer
                    default: 30
                    description: Kills pod after a specificed amount of time (in seconds).
                      Default is 30 seconds.
                    format: int64
                  version:
                    type: string
                    description: Version of the sensor to be installed. The latest
                      version will be selected when this version specifier is missing.
          status:
            type: object
            description: FalconNodeSensorStatus defines the observed state of FalconNodeSensor
            properties:
              conditions:
                type: array
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  type: object
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    type:
                      type: string
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                    status:
                      type: string
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                    lastTransitionTime:
                      type: string
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                    message:
                      type: string
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                    observedGeneration:
                      type: integer
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                    reason:
                      type: string
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
              sensor:
                type: string
                description: Version of the CrowdStrike Falcon Sensor
              version:
                type: string
                description: Version of the CrowdStrike Falcon Operator
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: falcon-operator-controller-manager
  namespace: falcon-operator
  labels:
    crowdstrike.com/component: rbac
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: controller-manager-sa
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: serviceaccount
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: falcon-operator-leader-election-role
  namespace: falcon-operator
  labels:
    crowdstrike.com/component: rbac
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: leader-election-role
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: role
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
rules:
- resources:
  - configmaps
  apiGroups:
  - ""
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- resources:
  - leases
  apiGroups:
  - coordination.k8s.io
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- resources:
  - events
  apiGroups:
  - ""
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: falcon-operator-container-role
  labels:
    crowdstrike.com/component: rbac
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: sidecar-role
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: clusterrole
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
rules:
- resources:
  - secrets
  apiGroups:
  - ""
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: falcon-operator-manager-role
  creationTimestamp: null
rules:
- resources:
  - configmaps
  apiGroups:
  - ""
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- resources:
  - deployments
  apiGroups:
  - ""
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- resources:
  - namespaces
  apiGroups:
  - ""
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- resources:
  - pods
  apiGroups:
  - ""
  verbs:
  - delete
  - deletecollection
  - get
  - list
  - watch
- resources:
  - secrets
  apiGroups:
  - ""
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- resources:
  - serviceaccounts
  apiGroups:
  - ""
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- resources:
  - services
  apiGroups:
  - ""
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- resources:
  - mutatingwebhookconfigurations
  apiGroups:
  - admissionregistration.k8s.io
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- resources:
  - daemonsets
  apiGroups:
  - apps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- resources:
  - deployments
  apiGroups:
  - apps
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- resources:
  - leases
  apiGroups:
  - coordination.k8s.io
  verbs:
  - create
  - get
  - list
  - update
- resources:
  - configmaps
  apiGroups:
  - ""
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- resources:
  - falconcontainers
  apiGroups:
  - falcon.crowdstrike.com
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- resources:
  - falconcontainers/finalizers
  apiGroups:
  - falcon.crowdstrike.com
  verbs:
  - get
  - patch
  - update
- resources:
  - falconcontainers/status
  apiGroups:
  - falcon.crowdstrike.com
  verbs:
  - get
  - patch
  - update
- resources:
  - falconnodesensors
  apiGroups:
  - falcon.crowdstrike.com
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- resources:
  - falconnodesensors/finalizers
  apiGroups:
  - falcon.crowdstrike.com
  verbs:
  - update
- resources:
  - falconnodesensors/status
  apiGroups:
  - falcon.crowdstrike.com
  verbs:
  - get
  - patch
  - update
- resources:
  - imagestreams
  apiGroups:
  - image.openshift.io
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- resources:
  - clusterrolebindings
  apiGroups:
  - rbac.authorization.k8s.io
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- resources:
  - securitycontextconstraints
  apiGroups:
  - security.openshift.io
  resourceNames:
  - privileged
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: falcon-operator-node-sensor-role
  labels:
    crowdstrike.com/component: rbac
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: node-sensor-role
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: clusterrole
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: falcon-operator-leader-election-rolebinding
  namespace: falcon-operator
  labels:
    crowdstrike.com/component: rbac
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: leader-election-rolebinding
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: rolebinding
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
roleRef:
  name: falcon-operator-leader-election-role
  kind: Role
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: falcon-operator-controller-manager
  namespace: falcon-operator
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: falcon-operator-manager-rolebinding
  labels:
    crowdstrike.com/component: rbac
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: manager-rolebinding
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: clusterrolebinding
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
roleRef:
  name: falcon-operator-manager-role
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: falcon-operator-controller-manager
  namespace: falcon-operator
  kind: ServiceAccount
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: falcon-operator-manager-config
  namespace: falcon-operator
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 70435a7a.crowdstrike.com
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: falcon-operator-controller-manager
  namespace: falcon-operator
  labels:
    control-plane: controller-manager
    crowdstrike.com/component: manager
    crowdstrike.com/created-by: falcon-operator
    crowdstrike.com/instance: controller-manager
    crowdstrike.com/managed-by: kustomize
    crowdstrike.com/name: deployment
    crowdstrike.com/part-of: Falcon
    crowdstrike.com/provider: crowdstrike
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: falcon-operator-controller-manager
      containers:
      - name: manager
        image: quay.io/crowdstrike/falcon-operator:latest
        command:
        - /manager
        args:
        - --leader-elect
        env:
        - name: WATCH_NAMESPACE
          value: null
        - name: OPERATOR_NAME
          value: falcon-operator
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 64Mi
        livenessProbe:
          httpGet:
            port: 8081
            path: /healthz
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            port: 8081
            path: /readyz
          initialDelaySeconds: 5
          periodSeconds: 10
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
