apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  creationTimestamp: null
  name: falconadmissions.falcon.crowdstrike.com
spec:
  group: falcon.crowdstrike.com
  names:
    kind: FalconAdmission
    listKind: FalconAdmissionList
    plural: falconadmissions
    singular: falconadmission
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Version of the Operator
      jsonPath: .status.version
      name: Operator Version
      type: string
    - description: Version of the Falcon Admission Controller
      jsonPath: .status.sensor
      name: Falcon Sensor
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FalconAdmission is the Schema for the falconadmissions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FalconAdmissionSpec defines the desired state of FalconAdmission
            properties:
              admissionConfig:
                description: Additional configuration for Falcon Admission Controller
                  deployment.
                properties:
                  containerPort:
                    default: 4443
                    description: Port on which the Falcon Admission Controller container
                      will listen for requests.
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                    x-kubernetes-int-or-string: true
                  deployWatcher:
                    default: true
                    description: Determines if with falcon-watcher container is included
                      in the Pod
                    type: boolean
                  disabledNamespaces:
                    description: Ignore admission control for a specific set of namespaces.
                    properties:
                      namespaces:
                        description: Configure a list of namespaces to ignore admission
                          control.
                        items:
                          type: string
                        type: array
                    type: object
                  failurePolicy:
                    default: Ignore
                    description: Configure the failure policy for the Falcon Admission
                      Controller.
                    enum:
                    - Ignore
                    - Fail
                    type: string
                  imagePullPolicy:
                    default: Always
                    description: PullPolicy describes a policy for if/when to pull
                      a container image
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                    type: string
                  imagePullSecrets:
                    description: ImagePullSecrets is an optional list of references
                      to secrets to use for pulling image from the image location.
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  replicas:
                    default: 2
                    description: Currently ignored and internally set to 1
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                    x-kubernetes-int-or-string: true
                  resources:
                    default:
                      limits:
                        cpu: 300m
                        memory: 256Mi
                      requests:
                        cpu: 300m
                        memory: 256Mi
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  resourcesClient:
                    default:
                      limits:
                        cpu: 750m
                        memory: 384Mi
                      requests:
                        cpu: 500m
                        memory: 384Mi
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  resourcesWatcher:
                    default:
                      limits:
                        cpu: 750m
                        memory: 384Mi
                      requests:
                        cpu: 500m
                        memory: 384Mi
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  serviceAccount:
                    description: Define annotations that will be passed down to admision
                      controller service account. This is useful for passing along
                      AWS IAM Role or GCP Workload Identity.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Define annotations that will be passed down to
                          the Service Account. This is useful for passing along AWS
                          IAM Role or GCP Workload Identity.
                        type: object
                    type: object
                  servicePort:
                    default: 443
                    description: Port on which the Falcon Admission Controller service
                      will listen for requests from the cluster.
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                    x-kubernetes-int-or-string: true
                  snapshotsEnabled:
                    default: true
                    description: Determines if snapshots of Kubernetes resources are
                      periodically taken for cluster visibility.
                    type: boolean
                  snapshotsInterval:
                    default: 22h
                    description: Time interval between two snapshots of Kubernetes
                      resources in the cluster.
                    format: duration
                    type: string
                  tls:
                    description: Configure TLS setings for the Falcon Admission Controller
                    properties:
                      validity:
                        description: Validity of the TLS certificate in days. Default
                          is 3650 days.
                        pattern: ^[0-9]{1-4}$
                        type: integer
                        x-kubernetes-int-or-string: true
                    type: object
                  updateStrategy:
                    default:
                      rollingUpdate:
                        maxSurge: 1
                        maxUnavailable: 0
                    description: Type of Deployment update. Can be "RollingUpdate"
                      or "OnDelete". Default is RollingUpdate.
                    properties:
                      rollingUpdate:
                        description: RollingUpdate is used to specify the strategy
                          used to roll out a deployment
                        properties:
                          maxSurge:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of pods that can be scheduled
                              above the desired number of pods. Value can be an absolute
                              number (ex: 5) or a percentage of desired pods (ex:
                              10%). This can not be 0 if MaxUnavailable is 0. Absolute
                              number is calculated from percentage by rounding up.
                              Defaults to 25%. Example: when this is set to 30%, the
                              new ReplicaSet can be scaled up immediately when the
                              rolling update starts, such that the total number of
                              old and new pods do not exceed 130% of desired pods.
                              Once old pods have been killed, new ReplicaSet can be
                              scaled up further, ensuring that total number of pods
                              running at any time during the update is at most 130%
                              of desired pods.'
                            x-kubernetes-int-or-string: true
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of pods that can be unavailable
                              during the update. Value can be an absolute number (ex:
                              5) or a percentage of desired pods (ex: 10%). Absolute
                              number is calculated from percentage by rounding down.
                              This can not be 0 if MaxSurge is 0. Defaults to 25%.
                              Example: when this is set to 30%, the old ReplicaSet
                              can be scaled down to 70% of desired pods immediately
                              when the rolling update starts. Once new pods are ready,
                              old ReplicaSet can be scaled down further, followed
                              by scaling up the new ReplicaSet, ensuring that the
                              total number of pods available at all times during the
                              update is at least 70% of desired pods.'
                            x-kubernetes-int-or-string: true
                        type: object
                    type: object
                  watcherEnabled:
                    default: true
                    description: Determines if Kubernetes resources are watched for
                      cluster visibility.
                    type: boolean
                type: object
              falcon:
                description: CrowdStrike Falcon sensor configuration
                properties:
                  apd:
                    default: false
                    description: Disable the Falcon Sensor's use of a proxy.
                    type: boolean
                  aph:
                    description: The application proxy host to use for Falcon sensor
                      proxy configuration.
                    type: string
                  app:
                    description: The application proxy port to use for Falcon sensor
                      proxy configuration.
                    maximum: 65535
                    minimum: 0
                    type: integer
                  billing:
                    description: Utilize default or Pay-As-You-Go billing.
                    enum:
                    - default
                    - metered
                    type: string
                  cid:
                    description: Falcon Customer ID (CID)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                    type: string
                  provisioning_token:
                    description: Installation token that prevents unauthorized hosts
                      from being accidentally or maliciously added to your customer
                      ID (CID).
                    pattern: ^[0-9a-fA-F]{8}$
                    type: string
                  tags:
                    description: 'Sensor grouping tags are optional, user-defined
                      identifiers that can used to group and filter hosts. Allowed
                      characters: all alphanumerics, ''/'', ''-'', and ''_''.'
                    items:
                      type: string
                    type: array
                  trace:
                    default: none
                    description: Set sensor trace level.
                    enum:
                    - none
                    - err
                    - warn
                    - info
                    - debug
                    type: string
                type: object
              falcon_api:
                description: "FalconAPI configures connection from your local Falcon
                  operator to CrowdStrike Falcon platform. \n When configured, it
                  will pull the sensor from registry.crowdstrike.com and deploy the
                  appropriate sensor to the cluster. \n If using the API is not desired,
                  the sensor can be manually configured by setting the Image and Version
                  fields."
                properties:
                  cid:
                    description: Falcon Customer ID (CID) Override (optional, default
                      is derived from the API Key pair)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                    type: string
                  client_id:
                    description: Falcon OAuth2 API Client ID
                    type: string
                  client_secret:
                    description: Falcon OAuth2 API Client Secret
                    type: string
                  cloud_region:
                    description: Cloud Region defines CrowdStrike Falcon Cloud Region
                      to which the operator will connect and register.
                    enum:
                    - autodiscover
                    - us-1
                    - us-2
                    - eu-1
                    - us-gov-1
                    type: string
                required:
                - client_id
                - client_secret
                - cloud_region
                type: object
              image:
                description: Location of the Falcon Sensor image. Use only in cases
                  when you mirror the original image to your repository/name:tag,
                  and CrowdStrike OAuth2 API is not used.
                pattern: ^.*:.*$
                type: string
              installNamespace:
                default: falcon-kac
                description: Namespace where the Falcon Admission Controller should
                  be installed. For best security practices, this should be a dedicated
                  namespace that is not used for any other purpose. It also should
                  not be the same namespace where the Falcon Operator or the Falcon
                  Sensor is installed.
                type: string
              registry:
                description: Registry configures container image registry to which
                  the Admission Controller image will be pushed.
                properties:
                  acr_name:
                    description: Azure Container Registry Name represents the name
                      of the ACR for the Falcon Container push. Only applicable to
                      Azure cloud.
                    type: string
                  tls:
                    description: TLS configures TLS connection for push of Falcon
                      Container image to the registry
                    properties:
                      caCertificate:
                        description: Allow for users to provide a CA Cert Bundle,
                          as either a string or base64 encoded string
                        type: string
                      caCertificateConfigMap:
                        description: Allow for users to provide a ConfigMap containing
                          a CA Cert Bundle under a key ending in .crt
                        type: string
                      insecure_skip_verify:
                        description: Allow pushing to docker registries over HTTPS
                          with failed TLS verification. Note that this does not affect
                          other TLS connections.
                        type: boolean
                    type: object
                  type:
                    description: Type of container registry to be used
                    enum:
                    - acr
                    - ecr
                    - gcr
                    - crowdstrike
                    - openshift
                    type: string
                required:
                - type
                type: object
              resourcequota:
                description: ResourceQuota configures the ResourceQuota for the Falcon
                  Admission Controller. This is useful for limiting the number of
                  pods that can be created in the namespace.
                properties:
                  pods:
                    default: "2"
                    description: Limits the number of admission controller pods that
                      can be created in the namespace.
                    type: string
                type: object
              version:
                description: 'Falcon Admission Controller Version. The latest version
                  will be selected when version specifier is missing. Example: 6.31,
                  6.31.0, 6.31.0-1409, etc.'
                type: string
            type: object
          status:
            description: FalconAdmissionStatus defines the observed state of FalconAdmission
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              sensor:
                description: Version of the CrowdStrike Falcon Sensor
                type: string
              version:
                description: Version of the CrowdStrike Falcon Operator
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
