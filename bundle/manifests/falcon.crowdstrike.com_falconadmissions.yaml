apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  creationTimestamp: null
  name: falconadmissions.falcon.crowdstrike.com
spec:
  group: falcon.crowdstrike.com
  names:
    kind: FalconAdmission
    listKind: FalconAdmissionList
    plural: falconadmissions
    singular: falconadmission
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Version of the Operator
      jsonPath: .status.version
      name: Operator Version
      type: string
    - description: Version of the Falcon Admission Controller
      jsonPath: .status.sensor
      name: Falcon Sensor
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FalconAdmission is the Schema for the falconadmissions API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FalconAdmissionSpec defines the desired state of FalconAdmission
            properties:
              admissionConfig:
                default: {}
                description: Additional configuration for Falcon Admission Controller
                  deployment.
                properties:
                  admissionControlEnabled:
                    default: true
                    description: Determines if the admission controller webhook is
                      enabled
                    type: boolean
                  containerPort:
                    default: 4443
                    description: Port on which the Falcon Admission Controller container
                      will listen for requests.
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                    x-kubernetes-int-or-string: true
                  deployWatcher:
                    default: true
                    description: Determines if with falcon-watcher container is included
                      in the Pod
                    type: boolean
                  disabledNamespaces:
                    description: Ignore admission control for a specific set of namespaces.
                    properties:
                      namespaces:
                        description: Configure a list of namespaces to ignore admission
                          control.
                        items:
                          type: string
                        type: array
                    type: object
                  failurePolicy:
                    default: Ignore
                    description: Configure the failure policy for the Falcon Admission
                      Controller.
                    enum:
                    - Ignore
                    - Fail
                    type: string
                  imagePullPolicy:
                    default: Always
                    description: PullPolicy describes a policy for if/when to pull
                      a container image
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                    type: string
                  imagePullSecrets:
                    description: ImagePullSecrets is an optional list of references
                      to secrets to use for pulling image from the image location.
                    items:
                      description: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  nodeAffinity:
                    description: Specifies node affinity for scheduling the Admission
                      Controller.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node matches the corresponding matchExpressions; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: |-
                            An empty preferred scheduling term matches all objects with implicit weight 0
                            (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to an update), the system
                          may or may not try to eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: |-
                                A null or empty node selector term matches no objects. The requirements of
                                them are ANDed.
                                The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  replicas:
                    default: 2
                    description: Currently ignored and internally set to 1
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                    x-kubernetes-int-or-string: true
                  resources:
                    default:
                      limits:
                        memory: 256Mi
                      requests:
                        cpu: 100m
                        memory: 256Mi
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  resourcesClient:
                    default:
                      limits:
                        memory: 384Mi
                      requests:
                        cpu: 250m
                        memory: 384Mi
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  resourcesClientNoWebhook:
                    default:
                      limits:
                        memory: 128Mi
                      requests:
                        cpu: 100m
                        memory: 128Mi
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  resourcesWatcher:
                    default:
                      limits:
                        memory: 384Mi
                      requests:
                        cpu: 250m
                        memory: 384Mi
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  serviceAccount:
                    description: Define annotations that will be passed down to admision
                      controller service account. This is useful for passing along
                      AWS IAM Role or GCP Workload Identity.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Define annotations that will be passed down to
                          the Service Account. This is useful for passing along AWS
                          IAM Role or GCP Workload Identity.
                        type: object
                    type: object
                  servicePort:
                    default: 443
                    description: Port on which the Falcon Admission Controller service
                      will listen for requests from the cluster.
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                    x-kubernetes-int-or-string: true
                  snapshotsEnabled:
                    default: true
                    description: Determines if snapshots of Kubernetes resources are
                      periodically taken for cluster visibility.
                    type: boolean
                  snapshotsInterval:
                    default: 22h
                    description: Time interval between two snapshots of Kubernetes
                      resources in the cluster.
                    format: duration
                    type: string
                  tls:
                    description: Configure TLS setings for the Falcon Admission Controller
                    properties:
                      validity:
                        description: Validity of the TLS certificate in days. Default
                          is 3650 days.
                        pattern: ^[0-9]{1-4}$
                        type: integer
                        x-kubernetes-int-or-string: true
                    type: object
                  updateStrategy:
                    default:
                      rollingUpdate:
                        maxSurge: 1
                        maxUnavailable: 0
                    description: Type of Deployment update. Can be "RollingUpdate"
                      or "OnDelete". Default is RollingUpdate.
                    properties:
                      rollingUpdate:
                        description: RollingUpdate is used to specify the strategy
                          used to roll out a deployment
                        properties:
                          maxSurge:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              The maximum number of pods that can be scheduled above the desired number of
                              pods.
                              Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                              This can not be 0 if MaxUnavailable is 0.
                              Absolute number is calculated from percentage by rounding up.
                              Defaults to 25%.
                              Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
                              the rolling update starts, such that the total number of old and new pods do not exceed
                              130% of desired pods. Once old pods have been killed,
                              new ReplicaSet can be scaled up further, ensuring that total number of pods running
                              at any time during the update is at most 130% of desired pods.
                            x-kubernetes-int-or-string: true
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              The maximum number of pods that can be unavailable during the update.
                              Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                              Absolute number is calculated from percentage by rounding down.
                              This can not be 0 if MaxSurge is 0.
                              Defaults to 25%.
                              Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
                              immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
                              can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
                              that the total number of pods available at all times during the update is at
                              least 70% of desired pods.
                            x-kubernetes-int-or-string: true
                        type: object
                    type: object
                  watcherEnabled:
                    default: true
                    description: Determines if Kubernetes resources are watched for
                      cluster visibility.
                    type: boolean
                type: object
              falcon:
                default: {}
                description: CrowdStrike Falcon sensor configuration
                properties:
                  apd:
                    default: false
                    description: Disable the Falcon Sensor's use of a proxy.
                    type: boolean
                  aph:
                    description: The application proxy host to use for Falcon sensor
                      proxy configuration.
                    type: string
                  app:
                    description: The application proxy port to use for Falcon sensor
                      proxy configuration.
                    maximum: 65535
                    minimum: 0
                    type: integer
                  billing:
                    description: Utilize default or Pay-As-You-Go billing.
                    enum:
                    - default
                    - metered
                    type: string
                  cid:
                    description: Falcon Customer ID (CID)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                    type: string
                  provisioning_token:
                    description: Installation token that prevents unauthorized hosts
                      from being accidentally or maliciously added to your customer
                      ID (CID).
                    pattern: ^[0-9a-fA-F]{8}$
                    type: string
                  tags:
                    description: 'Sensor grouping tags are optional, user-defined
                      identifiers that can used to group and filter hosts. Allowed
                      characters: all alphanumerics, ''/'', ''-'', and ''_''.'
                    items:
                      type: string
                    type: array
                  trace:
                    default: none
                    description: Set sensor trace level.
                    enum:
                    - none
                    - err
                    - warn
                    - info
                    - debug
                    type: string
                type: object
              falcon_api:
                description: |-
                  FalconAPI configures connection from your local Falcon operator to CrowdStrike Falcon platform.

                  When configured, it will pull the sensor from registry.crowdstrike.com and deploy the appropriate sensor to the cluster.

                  If using the API is not desired, the sensor can be manually configured by setting the Image and Version fields.
                properties:
                  cid:
                    description: Falcon Customer ID (CID) Override (optional, default
                      is derived from the API Key pair)
                    pattern: ^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$
                    type: string
                  client_id:
                    description: Falcon OAuth2 API Client ID
                    type: string
                  client_secret:
                    description: Falcon OAuth2 API Client Secret
                    type: string
                  cloud_region:
                    description: Cloud Region defines CrowdStrike Falcon Cloud Region
                      to which the operator will connect and register.
                    enum:
                    - autodiscover
                    - us-1
                    - us-2
                    - eu-1
                    - us-gov-1
                    - us-gov-2
                    type: string
                required:
                - cloud_region
                type: object
              falconSecret:
                default:
                  enabled: false
                description: |-
                  FalconSecret config is used to inject k8s secrets with sensitive data for the FalconSensor and the FalconAPI.
                  The following Falcon values are supported by k8s secret injection:
                    falcon-cid
                    falcon-provisioning-token
                    falcon-client-id
                    falcon-client-secret
                properties:
                  enabled:
                    default: false
                    description: Enable injecting sensitive Falcon values from existing
                      k8s secret
                    type: boolean
                  namespace:
                    description: Namespace where the Falcon k8s secret is located.
                    type: string
                  secretName:
                    description: SecretName of the existing Falcon k8s secret
                    type: string
                required:
                - enabled
                type: object
              image:
                description: Location of the Falcon Sensor image. Use only in cases
                  when you mirror the original image to your repository/name:tag,
                  and CrowdStrike OAuth2 API is not used.
                pattern: ^.*:.*$
                type: string
              installNamespace:
                default: falcon-kac
                description: |-
                  Namespace where the Falcon Admission Controller should be installed.
                  For best security practices, this should be a dedicated namespace that is not used for any other purpose.
                  It also should not be the same namespace where the Falcon Operator or the Falcon Sensor is installed.
                type: string
              registry:
                description: Registry configures container image registry to which
                  the Admission Controller image will be pushed.
                properties:
                  acr_name:
                    description: Azure Container Registry Name represents the name
                      of the ACR for the Falcon Container push. Only applicable to
                      Azure cloud.
                    type: string
                  tls:
                    description: TLS configures TLS connection for push of Falcon
                      Container image to the registry
                    properties:
                      caCertificate:
                        description: Allow for users to provide a CA Cert Bundle,
                          as either a string or base64 encoded string
                        type: string
                      caCertificateConfigMap:
                        description: Allow for users to provide a ConfigMap containing
                          a CA Cert Bundle under a key ending in .crt
                        type: string
                      insecure_skip_verify:
                        description: Allow pushing to docker registries over HTTPS
                          with failed TLS verification. Note that this does not affect
                          other TLS connections.
                        type: boolean
                    type: object
                  type:
                    description: Type of container registry to be used
                    enum:
                    - acr
                    - ecr
                    - gcr
                    - crowdstrike
                    - openshift
                    type: string
                required:
                - type
                type: object
              resourcequota:
                default: {}
                description: ResourceQuota configures the ResourceQuota for the Falcon
                  Admission Controller. This is useful for limiting the number of
                  pods that can be created in the namespace.
                properties:
                  pods:
                    default: "2"
                    description: Limits the number of admission controller pods that
                      can be created in the namespace.
                    type: string
                type: object
              version:
                description: 'Falcon Admission Controller Version. The latest version
                  will be selected when version specifier is missing. Example: 6.31,
                  6.31.0, 6.31.0-1409, etc.'
                type: string
            type: object
          status:
            description: FalconAdmissionStatus defines the observed state of FalconAdmission
            properties:
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              sensor:
                description: Version of the CrowdStrike Falcon Sensor
                type: string
              version:
                description: Version of the CrowdStrike Falcon Operator
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
