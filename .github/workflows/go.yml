name: Golang Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        go-version: [1.15.x]

    runs-on: ${{ matrix.os }}
    steps:

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get Go dependencies
      run: go get -v -t -d ./...

    - name: Build
      run: |
        make all

    - name: Install dependencies
      uses: mstksg/get-package@master
      with:
        apt-get: libgpgme-dev libbtrfs-dev libdevmapper-dev

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.29
        args: --timeout=3m12s

    - name: Ensure autogenerated stuff is in the best possible shape
      run: |
        go mod tidy
        make manifests generate
        make bundle
        rm deploy/falcon-operator.yaml && make deploy/falcon-operator.yaml
        find ./bundle* -type f -exec sed -i -e 's/operator-sdk-v1.7.1+git/operator-sdk-v1.8.0/g' {} \;
        if [[ -n $(git status -s) ]] ; then
          echo "Generating manifests leaves tracked fiels in a modified state."
          echo "Ensure to include updated manifests in this PR."
          echo "This is usually done by running 'go mod tidy; make manifests generate' and running 'git add ...' for the files that was modified by generating manifests."
          git status -s
          git diff
          exit 1
        fi
