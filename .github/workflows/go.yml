name: Golang Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        go-version: [1.15.x]

    runs-on: ${{ matrix.os }}
    steps:

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get Go dependencies
      run: go get -v -t -d ./...

    - name: Build
      run: |
        make all

    - name: Install dependencies
      uses: mstksg/get-package@master
      with:
        apt-get: libgpgme-dev libbtrfs-dev libdevmapper-dev

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.29
        args: --timeout=3m12s

    - name: Ensure go modules are tidy
      run: |
        go mod tidy
        if [[ -n $(git status -s) ]] ; then
          echo "Running 'go mod tidy' changes the current settinng"
          echo "Ensure to include updated go.mod and go.sum in this PR."
          echo "This is usually done by running 'go mod tidy'"
          git status -s
          git diff
          exit 1
        fi
